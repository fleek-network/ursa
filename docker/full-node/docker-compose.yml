version: '3'
services:
  ursa-proxy:
    image: ghcr.io/fleek-network/ursa-proxy:latest
    volumes:
      - ${HOME}/.ursa/:/root/.ursa/:rw
      - ./data/certbot/conf:/etc/letsencrypt
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    expose:
      - 443
    depends_on:
      - certbot
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    labels:
      org.label-schema.group: "monitoring"
  prometheus:
    image: prom/prometheus
    restart: always
    ports:
      - "9090:9090"
    expose:
      - "9090"
    volumes:
      - ./data/prom:/etc/prometheus
    command:
      - '--web.enable-lifecycle'
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention.time=72h'
    depends_on:
      - ursa
      - node-exporter
  grafana:
    image: grafana/grafana
    volumes:
      - ./data/grafana:/var/lib/grafana
      - ./data/grafana/provisioning:/etc/grafana/provisioning
      - ./data/grafana/dashboards:/etc/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - "3000:3000"
    expose:
      - 3000
    depends_on:
      - prometheus
    user: "$UID:$GID"
    entrypoint: "bash /var/lib/grafana/run.sh"
  ursa:
    # default image name which matches suggested docker run version for cache
    image: ghcr.io/fleek-network/ursa:latest
    restart: always
    ports:
      - "6009:6009"
    expose:
      # 4069 TCP, used for HTTP RPC, REST, and metrics
      - "4069"
      # 6009 TCP and UDP, used by the P2P protocol running the network
      - "6009"
    volumes:
      - ${HOME}/.ursa/:/root/.ursa/:rw
    healthcheck:
      test: "curl http://localhost:4069/ping || (\n  config_path=./docker/full-node/docker-compose.yml\n\n  if [[ ! -f \"$config_path\" && -f \"docker-compose.yml\" ]]; then\n    printf \"%s\\n\" \"\U0001F916 Found docker-compose.yml in current work dir and will override the default path.\"\n\n    config_path=\"docker-compose.yml\"\n  fi\n\n  if [[ ! -f \"$config_path\" ]]; then\n    printf \"%s\\n\" \"\U0001F479 Oops! The Ursa service should be restarted but we couldn't locate the Stack configuration file. Have you started the Stack from the project root?\"\n\n    exit 1\n  fi\n\n  docker-compose -f \"$config_path\" restart ursa\n)\n"
      interval: 5m
      timeout: 10s
      retries: 3
