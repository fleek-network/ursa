name: rust-ci

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  tests:
    name: ${{ matrix.make.name }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust: [nightly]
        make:
          - name: Clippy
            task: "check"
          - name: Tests
            task: "test-network"
          - name: Doc
            task: "doc"
        include:
          - os: ubuntu-latest
            env:
            CARGO_INCREMENTAL: '0'
            RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
            RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
          - os: macos-latest
            env:
            CARGO_INCREMENTAL: '0'
            RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
            RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
        exclude:
          - os: ubuntu-latest
            rust: nightly
            make:
              name: Clippy Doc
          - os: macos-latest
            rust: nightly
            make:
              name: Clippy Doc

    env:
      RUSTV: ${{ matrix.rust }}

    steps:
      - name: Install Dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang ocl-icd-opencl-dev

      - name: Checkout repository
        uses: actions/checkout@master

      # - name: Install protoc (ubuntu-latest)
      #   if: matrix.os == 'ubuntu-latest'
      #   run: |

      - name: Install Protoc
        uses: arduino/setup-protoc@v1

      - name: Install protoc (macos-latest)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install sccache   
          brew install protobuf
          protoc --version      

      - name: Install Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          profile: minimal
          components: clippy, rustc-dev, llvm-tools-preview

      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-clippy-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
          
      - name: ${{ matrix.make.name }}
        run: make ${{ matrix.make.task }}

      - name: Setup grcov
        id: coverage
        uses: actions-rs/grcov@v0.1

      - name: grcov upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          file: ${{ steps.coverage.outputs.report }}