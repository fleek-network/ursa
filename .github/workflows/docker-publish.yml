name: Docker

on:
  schedule:
    - cron: '43 2 * * *'
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        toolchain:
          - stable
          # - 1.61.0
        os:
          - ubuntu-latest
          # - macos-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang ocl-icd-opencl-dev

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
            toolchain: ${{ matrix.toolchain }}
            default: true
            profile: minimal

      - name: Rust Cache
        uses: Swatinem/rust-cache@v1.3.0

      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v2.5.0
        with:
          cosign-release: 'v1.9.0'

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2.0.0

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4.0.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3.1.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: cosign sign ${{ steps.meta.outputs.tags }}@${{ steps.build-and-push.outputs.digest }}
