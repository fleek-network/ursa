pub use fleek_reward::*;
/// This module was auto-generated with ethers-rs Abigen.
/// More information at: <https://github.com/gakonst/ethers-rs>
#[allow(
    clippy::enum_variant_names,
    clippy::too_many_arguments,
    clippy::upper_case_acronyms,
    clippy::type_complexity,
    dead_code,
    non_camel_case_types,
)]
pub mod fleek_reward {
    #[rustfmt::skip]
    const __ABI: &str = "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\",\"components\":[]}],\"type\":\"error\",\"name\":\"PRBMath_MulDiv18_Overflow\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\",\"components\":[]}],\"type\":\"error\",\"name\":\"PRBMath_MulDiv_Overflow\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"x\",\"type\":\"int256\",\"components\":[]}],\"type\":\"error\",\"name\":\"PRBMath_SD59x18_Convert_Overflow\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"x\",\"type\":\"int256\",\"components\":[]}],\"type\":\"error\",\"name\":\"PRBMath_SD59x18_Convert_Underflow\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"PRBMath_SD59x18_Div_InputTooSmall\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"SD59x18\",\"name\":\"x\",\"type\":\"int256\",\"components\":[]},{\"internalType\":\"SD59x18\",\"name\":\"y\",\"type\":\"int256\",\"components\":[]}],\"type\":\"error\",\"name\":\"PRBMath_SD59x18_Div_Overflow\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"SD59x18\",\"name\":\"x\",\"type\":\"int256\",\"components\":[]}],\"type\":\"error\",\"name\":\"PRBMath_SD59x18_IntoUint256_Underflow\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"PRBMath_SD59x18_Mul_InputTooSmall\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"SD59x18\",\"name\":\"x\",\"type\":\"int256\",\"components\":[]},{\"internalType\":\"SD59x18\",\"name\":\"y\",\"type\":\"int256\",\"components\":[]}],\"type\":\"error\",\"name\":\"PRBMath_SD59x18_Mul_Overflow\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"NewController\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"NewPendingController\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\",\"components\":[],\"indexed\":false}],\"type\":\"event\",\"name\":\"RewardMinted\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"acceptTransfer\",\"outputs\":[]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"cost\",\"outputs\":[{\"internalType\":\"SD59x18\",\"name\":\"\",\"type\":\"int256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"distributeRewards\",\"outputs\":[]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"epochManager\",\"outputs\":[{\"internalType\":\"contract EpochManager\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"inflationInLastEpoch\",\"outputs\":[{\"internalType\":\"SD59x18\",\"name\":\"\",\"type\":\"int256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_controller\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"_epoch\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"_aggregator\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"initialize\",\"outputs\":[]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"maxInflation\",\"outputs\":[{\"internalType\":\"SD59x18\",\"name\":\"\",\"type\":\"int256\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"minInflationFactor\",\"outputs\":[{\"internalType\":\"SD59x18\",\"name\":\"\",\"type\":\"int256\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"nodeRegistry\",\"outputs\":[{\"internalType\":\"contract NodeRegistry\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"pendingController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"price\",\"outputs\":[{\"internalType\":\"SD59x18\",\"name\":\"\",\"type\":\"int256\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"rewardsAggregator\",\"outputs\":[{\"internalType\":\"contract RewardsAggregator\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"rewardsDistribution\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"SD59x18\",\"name\":\"_cost\",\"type\":\"int256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"setCost\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"SD59x18\",\"name\":\"_inflationRate\",\"type\":\"int256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"setInflationRate\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"SD59x18\",\"name\":\"_minInflationFactor\",\"type\":\"int256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"setMinInflationFactor\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"SD59x18\",\"name\":\"_price\",\"type\":\"int256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"setPrice\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newController\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"transferController\",\"outputs\":[]}]";
    ///The parsed JSON ABI of the contract.
    pub static FLEEKREWARD_ABI: ::ethers::contract::Lazy<::ethers::core::abi::Abi> = ::ethers::contract::Lazy::new(||
    ::ethers::core::utils::__serde_json::from_str(__ABI).expect("ABI is always valid"));
    #[rustfmt::skip]
    const __BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        20,
        35,
        128,
        97,
        0,
        32,
        96,
        0,
        57,
        96,
        0,
        243,
        254,
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        4,
        54,
        16,
        97,
        1,
        33,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        90,
        186,
        31,
        71,
        17,
        97,
        0,
        173,
        87,
        128,
        99,
        217,
        181,
        196,
        165,
        17,
        97,
        0,
        113,
        87,
        128,
        99,
        217,
        181,
        196,
        165,
        20,
        97,
        2,
        64,
        87,
        128,
        99,
        226,
        210,
        191,
        227,
        20,
        97,
        2,
        83,
        87,
        128,
        99,
        232,
        234,
        5,
        75,
        20,
        97,
        2,
        102,
        87,
        128,
        99,
        247,
        124,
        71,
        145,
        20,
        97,
        2,
        121,
        87,
        128,
        99,
        247,
        163,
        8,
        6,
        20,
        97,
        2,
        140,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        90,
        186,
        31,
        71,
        20,
        97,
        2,
        9,
        87,
        128,
        99,
        93,
        189,
        21,
        242,
        20,
        97,
        2,
        18,
        87,
        128,
        99,
        160,
        53,
        177,
        254,
        20,
        97,
        2,
        27,
        87,
        128,
        99,
        162,
        202,
        179,
        161,
        20,
        97,
        2,
        36,
        87,
        128,
        99,
        199,
        35,
        18,
        157,
        20,
        97,
        2,
        55,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        40,
        205,
        75,
        109,
        17,
        97,
        0,
        244,
        87,
        128,
        99,
        40,
        205,
        75,
        109,
        20,
        97,
        1,
        157,
        87,
        128,
        99,
        81,
        87,
        25,
        0,
        20,
        97,
        1,
        176,
        87,
        128,
        99,
        84,
        126,
        234,
        193,
        20,
        97,
        1,
        219,
        87,
        128,
        99,
        86,
        165,
        114,
        213,
        20,
        97,
        1,
        227,
        87,
        128,
        99,
        89,
        151,
        78,
        56,
        20,
        97,
        1,
        246,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        19,
        250,
        237,
        230,
        20,
        97,
        1,
        38,
        87,
        128,
        99,
        20,
        89,
        69,
        122,
        20,
        97,
        1,
        66,
        87,
        128,
        99,
        22,
        246,
        51,
        104,
        20,
        97,
        1,
        87,
        87,
        128,
        99,
        39,
        153,
        69,
        157,
        20,
        97,
        1,
        138,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        97,
        1,
        47,
        96,
        12,
        84,
        129,
        86,
        91,
        96,
        64,
        81,
        144,
        129,
        82,
        96,
        32,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        97,
        1,
        85,
        97,
        1,
        80,
        54,
        96,
        4,
        97,
        15,
        109,
        86,
        91,
        97,
        2,
        159,
        86,
        91,
        0,
        91,
        97,
        1,
        122,
        97,
        1,
        101,
        54,
        96,
        4,
        97,
        15,
        222,
        86,
        91,
        96,
        8,
        96,
        32,
        82,
        96,
        0,
        144,
        129,
        82,
        96,
        64,
        144,
        32,
        84,
        96,
        255,
        22,
        129,
        86,
        91,
        96,
        64,
        81,
        144,
        21,
        21,
        129,
        82,
        96,
        32,
        1,
        97,
        1,
        57,
        86,
        91,
        97,
        1,
        85,
        97,
        1,
        152,
        54,
        96,
        4,
        97,
        15,
        222,
        86,
        91,
        96,
        12,
        85,
        86,
        91,
        97,
        1,
        85,
        97,
        1,
        171,
        54,
        96,
        4,
        97,
        15,
        222,
        86,
        91,
        96,
        9,
        85,
        86,
        91,
        96,
        3,
        84,
        97,
        1,
        195,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        86,
        91,
        96,
        64,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        145,
        22,
        129,
        82,
        96,
        32,
        1,
        97,
        1,
        57,
        86,
        91,
        97,
        1,
        85,
        97,
        3,
        130,
        86,
        91,
        97,
        1,
        85,
        97,
        1,
        241,
        54,
        96,
        4,
        97,
        15,
        222,
        86,
        91,
        96,
        10,
        85,
        86,
        91,
        97,
        1,
        85,
        97,
        2,
        4,
        54,
        96,
        4,
        97,
        15,
        222,
        86,
        91,
        97,
        4,
        60,
        86,
        91,
        97,
        1,
        47,
        96,
        9,
        84,
        129,
        86,
        91,
        97,
        1,
        47,
        96,
        10,
        84,
        129,
        86,
        91,
        97,
        1,
        47,
        96,
        11,
        84,
        129,
        86,
        91,
        96,
        1,
        84,
        97,
        1,
        195,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        86,
        91,
        97,
        1,
        47,
        96,
        6,
        84,
        129,
        86,
        91,
        96,
        5,
        84,
        97,
        1,
        195,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        86,
        91,
        96,
        4,
        84,
        97,
        1,
        195,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        86,
        91,
        97,
        1,
        85,
        97,
        2,
        116,
        54,
        96,
        4,
        97,
        15,
        247,
        86,
        91,
        97,
        9,
        91,
        86,
        91,
        96,
        0,
        84,
        97,
        1,
        195,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        86,
        91,
        97,
        1,
        85,
        97,
        2,
        154,
        54,
        96,
        4,
        97,
        15,
        222,
        86,
        91,
        96,
        11,
        85,
        86,
        91,
        96,
        7,
        84,
        96,
        255,
        22,
        21,
        97,
        3,
        3,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        36,
        128,
        130,
        1,
        82,
        127,
        82,
        101,
        119,
        97,
        114,
        100,
        115,
        32,
        99,
        111,
        110,
        116,
        114,
        97,
        99,
        116,
        32,
        97,
        108,
        114,
        101,
        97,
        100,
        121,
        32,
        105,
        110,
        105,
        116,
        105,
        97,
        108,
        96,
        68,
        130,
        1,
        82,
        99,
        26,
        94,
        153,
        89,
        96,
        226,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        135,
        22,
        23,
        144,
        85,
        96,
        2,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        149,
        134,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        145,
        130,
        22,
        23,
        144,
        145,
        85,
        96,
        5,
        128,
        84,
        146,
        134,
        22,
        146,
        130,
        22,
        146,
        144,
        146,
        23,
        144,
        145,
        85,
        96,
        4,
        128,
        84,
        147,
        133,
        22,
        147,
        130,
        22,
        147,
        144,
        147,
        23,
        144,
        146,
        85,
        96,
        3,
        128,
        84,
        145,
        144,
        147,
        22,
        145,
        22,
        23,
        144,
        85,
        80,
        96,
        10,
        84,
        96,
        6,
        85,
        96,
        7,
        128,
        84,
        96,
        255,
        25,
        22,
        96,
        1,
        23,
        144,
        85,
        86,
        91,
        96,
        1,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        20,
        97,
        3,
        234,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        37,
        96,
        36,
        130,
        1,
        82,
        127,
        67,
        97,
        108,
        108,
        101,
        114,
        32,
        109,
        117,
        115,
        116,
        32,
        98,
        101,
        32,
        116,
        104,
        101,
        32,
        112,
        101,
        110,
        100,
        105,
        110,
        103,
        32,
        67,
        111,
        110,
        116,
        114,
        96,
        68,
        130,
        1,
        82,
        100,
        55,
        182,
        54,
        50,
        185,
        96,
        217,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        97,
        2,
        250,
        86,
        91,
        96,
        0,
        128,
        84,
        96,
        1,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        129,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        131,
        22,
        129,
        23,
        132,
        85,
        96,
        64,
        81,
        145,
        144,
        146,
        22,
        146,
        131,
        145,
        127,
        249,
        182,
        162,
        135,
        0,
        87,
        157,
        92,
        143,
        171,
        80,
        240,
        172,
        45,
        202,
        165,
        33,
        9,
        184,
        92,
        54,
        156,
        79,
        81,
        31,
        204,
        135,
        51,
        48,
        171,
        108,
        187,
        145,
        144,
        163,
        80,
        86,
        91,
        96,
        0,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        20,
        97,
        4,
        102,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        2,
        250,
        144,
        97,
        16,
        20,
        86,
        91,
        128,
        96,
        4,
        96,
        0,
        144,
        84,
        144,
        97,
        1,
        0,
        10,
        144,
        4,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        99,
        144,
        12,
        240,
        207,
        96,
        64,
        81,
        129,
        99,
        255,
        255,
        255,
        255,
        22,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        4,
        186,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        4,
        222,
        145,
        144,
        97,
        16,
        103,
        86,
        91,
        3,
        97,
        5,
        63,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        43,
        96,
        36,
        130,
        1,
        82,
        127,
        99,
        97,
        110,
        110,
        111,
        116,
        32,
        100,
        105,
        115,
        116,
        114,
        105,
        98,
        117,
        116,
        101,
        32,
        114,
        101,
        119,
        97,
        114,
        100,
        115,
        32,
        102,
        111,
        114,
        32,
        99,
        117,
        96,
        68,
        130,
        1,
        82,
        106,
        14,
        78,
        76,
        173,
        206,
        132,
        12,
        174,
        13,
        236,
        109,
        96,
        171,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        97,
        2,
        250,
        86,
        91,
        96,
        0,
        129,
        129,
        82,
        96,
        8,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        96,
        255,
        22,
        21,
        97,
        5,
        177,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        42,
        96,
        36,
        130,
        1,
        82,
        127,
        114,
        101,
        119,
        97,
        114,
        100,
        115,
        32,
        97,
        108,
        114,
        101,
        97,
        100,
        121,
        32,
        100,
        105,
        115,
        116,
        114,
        105,
        98,
        117,
        116,
        101,
        100,
        32,
        102,
        111,
        114,
        32,
        96,
        68,
        130,
        1,
        82,
        105,
        14,
        141,
        13,
        46,
        100,
        12,
        174,
        13,
        236,
        109,
        96,
        179,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        97,
        2,
        250,
        86,
        91,
        96,
        3,
        84,
        96,
        64,
        81,
        99,
        137,
        177,
        121,
        139,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        129,
        1,
        131,
        144,
        82,
        96,
        0,
        145,
        97,
        6,
        43,
        145,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        145,
        22,
        144,
        99,
        137,
        177,
        121,
        139,
        144,
        96,
        36,
        1,
        91,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        6,
        2,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        6,
        38,
        145,
        144,
        97,
        16,
        103,
        86,
        91,
        97,
        10,
        36,
        86,
        91,
        96,
        3,
        84,
        96,
        64,
        81,
        99,
        3,
        174,
        139,
        241,
        96,
        225,
        27,
        129,
        82,
        96,
        4,
        129,
        1,
        133,
        144,
        82,
        145,
        146,
        80,
        96,
        0,
        145,
        97,
        6,
        100,
        145,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        144,
        99,
        7,
        93,
        23,
        226,
        144,
        96,
        36,
        1,
        97,
        5,
        229,
        86,
        91,
        144,
        80,
        96,
        0,
        97,
        6,
        114,
        131,
        131,
        97,
        10,
        169,
        86,
        91,
        144,
        80,
        96,
        0,
        97,
        6,
        136,
        130,
        103,
        10,
        104,
        137,
        6,
        189,
        139,
        0,
        0,
        97,
        11,
        234,
        86,
        91,
        96,
        3,
        84,
        96,
        64,
        81,
        99,
        55,
        44,
        26,
        255,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        129,
        1,
        136,
        144,
        82,
        145,
        146,
        80,
        96,
        0,
        145,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        145,
        22,
        144,
        99,
        55,
        44,
        26,
        255,
        144,
        96,
        36,
        1,
        96,
        0,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        6,
        215,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        0,
        130,
        62,
        96,
        31,
        61,
        144,
        129,
        1,
        96,
        31,
        25,
        22,
        130,
        1,
        96,
        64,
        82,
        97,
        6,
        255,
        145,
        144,
        129,
        1,
        144,
        97,
        17,
        87,
        86,
        91,
        144,
        80,
        96,
        0,
        91,
        129,
        81,
        129,
        16,
        21,
        97,
        9,
        58,
        87,
        96,
        3,
        84,
        130,
        81,
        96,
        0,
        145,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        144,
        99,
        211,
        75,
        13,
        175,
        144,
        133,
        144,
        133,
        144,
        129,
        16,
        97,
        7,
        55,
        87,
        97,
        7,
        55,
        97,
        18,
        13,
        86,
        91,
        96,
        32,
        2,
        96,
        32,
        1,
        1,
        81,
        138,
        96,
        64,
        81,
        131,
        99,
        255,
        255,
        255,
        255,
        22,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        7,
        93,
        146,
        145,
        144,
        97,
        18,
        79,
        86,
        91,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        7,
        122,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        7,
        158,
        145,
        144,
        97,
        16,
        103,
        86,
        91,
        144,
        80,
        96,
        0,
        97,
        7,
        181,
        136,
        97,
        7,
        175,
        132,
        97,
        10,
        36,
        86,
        91,
        144,
        97,
        12,
        183,
        86,
        91,
        144,
        80,
        96,
        0,
        97,
        7,
        195,
        130,
        135,
        97,
        11,
        234,
        86,
        91,
        96,
        5,
        84,
        134,
        81,
        145,
        146,
        80,
        96,
        0,
        145,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        145,
        22,
        144,
        99,
        13,
        128,
        191,
        100,
        144,
        136,
        144,
        136,
        144,
        129,
        16,
        97,
        7,
        242,
        87,
        97,
        7,
        242,
        97,
        18,
        13,
        86,
        91,
        96,
        32,
        2,
        96,
        32,
        1,
        1,
        81,
        96,
        64,
        81,
        130,
        99,
        255,
        255,
        255,
        255,
        22,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        8,
        22,
        145,
        144,
        97,
        18,
        113,
        86,
        91,
        96,
        0,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        8,
        51,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        0,
        130,
        62,
        96,
        31,
        61,
        144,
        129,
        1,
        96,
        31,
        25,
        22,
        130,
        1,
        96,
        64,
        82,
        97,
        8,
        91,
        145,
        144,
        129,
        1,
        144,
        97,
        18,
        132,
        86,
        91,
        80,
        80,
        96,
        2,
        84,
        146,
        147,
        80,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        145,
        22,
        144,
        80,
        99,
        64,
        193,
        15,
        25,
        130,
        97,
        8,
        128,
        133,
        97,
        13,
        100,
        86,
        91,
        96,
        64,
        81,
        96,
        1,
        96,
        1,
        96,
        224,
        27,
        3,
        25,
        96,
        224,
        133,
        144,
        27,
        22,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        146,
        22,
        96,
        4,
        131,
        1,
        82,
        96,
        36,
        130,
        1,
        82,
        96,
        68,
        1,
        96,
        0,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        96,
        0,
        135,
        128,
        59,
        21,
        128,
        21,
        97,
        8,
        198,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        90,
        241,
        21,
        128,
        21,
        97,
        8,
        218,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        128,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        127,
        232,
        234,
        61,
        77,
        208,
        162,
        234,
        175,
        63,
        117,
        50,
        173,
        57,
        18,
        85,
        84,
        79,
        138,
        75,
        207,
        120,
        248,
        80,
        187,
        255,
        97,
        213,
        186,
        201,
        247,
        117,
        82,
        97,
        9,
        18,
        132,
        97,
        13,
        100,
        86,
        91,
        96,
        64,
        81,
        144,
        129,
        82,
        96,
        32,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        162,
        80,
        80,
        80,
        80,
        128,
        128,
        97,
        9,
        50,
        144,
        97,
        19,
        91,
        86,
        91,
        145,
        80,
        80,
        97,
        7,
        4,
        86,
        91,
        80,
        80,
        80,
        96,
        0,
        147,
        132,
        82,
        80,
        80,
        96,
        8,
        96,
        32,
        82,
        80,
        96,
        64,
        144,
        32,
        128,
        84,
        96,
        255,
        25,
        22,
        96,
        1,
        23,
        144,
        85,
        86,
        91,
        96,
        0,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        20,
        97,
        9,
        133,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        2,
        250,
        144,
        97,
        16,
        20,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        97,
        9,
        211,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        21,
        96,
        36,
        130,
        1,
        82,
        116,
        17,
        219,
        221,
        153,
        92,
        155,
        155,
        220,
        136,
        24,
        216,
        91,
        157,
        8,
        24,
        153,
        72,
        27,
        157,
        91,
        27,
        96,
        90,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        2,
        250,
        86,
        91,
        96,
        1,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        129,
        22,
        145,
        130,
        23,
        144,
        146,
        85,
        96,
        0,
        128,
        84,
        96,
        64,
        81,
        146,
        147,
        22,
        145,
        127,
        255,
        150,
        8,
        22,
        6,
        159,
        193,
        16,
        17,
        247,
        127,
        239,
        142,
        89,
        42,
        198,
        252,
        101,
        94,
        232,
        111,
        16,
        168,
        176,
        227,
        252,
        175,
        106,
        235,
        225,
        143,
        100,
        145,
        144,
        163,
        80,
        86,
        91,
        96,
        0,
        97,
        10,
        60,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        96,
        1,
        96,
        255,
        27,
        97,
        19,
        138,
        86,
        91,
        130,
        18,
        21,
        97,
        10,
        95,
        87,
        96,
        64,
        81,
        99,
        153,
        71,
        78,
        235,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        129,
        1,
        131,
        144,
        82,
        96,
        36,
        1,
        97,
        2,
        250,
        86,
        91,
        97,
        10,
        120,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        96,
        1,
        96,
        1,
        96,
        255,
        27,
        3,
        97,
        19,
        138,
        86,
        91,
        130,
        19,
        21,
        97,
        10,
        155,
        87,
        96,
        64,
        81,
        99,
        157,
        88,
        16,
        145,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        129,
        1,
        131,
        144,
        82,
        96,
        36,
        1,
        97,
        2,
        250,
        86,
        91,
        80,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        2,
        144,
        86,
        91,
        96,
        0,
        128,
        97,
        10,
        182,
        132,
        132,
        97,
        13,
        145,
        86,
        91,
        144,
        80,
        96,
        0,
        97,
        10,
        196,
        130,
        133,
        97,
        12,
        183,
        86,
        91,
        144,
        80,
        96,
        0,
        97,
        10,
        251,
        97,
        10,
        236,
        131,
        97,
        10,
        230,
        96,
        12,
        84,
        96,
        11,
        84,
        97,
        12,
        183,
        144,
        145,
        144,
        99,
        255,
        255,
        255,
        255,
        22,
        86,
        91,
        144,
        97,
        11,
        234,
        86,
        91,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        144,
        97,
        13,
        145,
        86,
        91,
        144,
        80,
        96,
        0,
        97,
        11,
        17,
        97,
        11,
        14,
        131,
        96,
        9,
        84,
        97,
        13,
        167,
        86,
        91,
        144,
        86,
        91,
        144,
        80,
        96,
        0,
        97,
        11,
        42,
        96,
        6,
        84,
        131,
        97,
        11,
        234,
        144,
        145,
        144,
        99,
        255,
        255,
        255,
        255,
        22,
        86,
        91,
        144,
        80,
        96,
        0,
        97,
        11,
        61,
        97,
        11,
        14,
        131,
        96,
        10,
        84,
        97,
        13,
        190,
        86,
        91,
        144,
        80,
        128,
        96,
        6,
        129,
        144,
        85,
        80,
        96,
        0,
        96,
        2,
        96,
        0,
        144,
        84,
        144,
        97,
        1,
        0,
        10,
        144,
        4,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        99,
        24,
        22,
        13,
        221,
        96,
        64,
        81,
        129,
        99,
        255,
        255,
        255,
        255,
        22,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        11,
        155,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        11,
        191,
        145,
        144,
        97,
        16,
        103,
        86,
        91,
        144,
        80,
        97,
        11,
        220,
        97,
        11,
        207,
        97,
        1,
        109,
        97,
        10,
        36,
        86,
        91,
        97,
        7,
        175,
        132,
        97,
        10,
        230,
        133,
        97,
        10,
        36,
        86,
        91,
        154,
        153,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        130,
        130,
        96,
        1,
        96,
        255,
        27,
        130,
        20,
        128,
        97,
        12,
        3,
        87,
        80,
        96,
        1,
        96,
        255,
        27,
        129,
        20,
        91,
        21,
        97,
        12,
        33,
        87,
        96,
        64,
        81,
        99,
        166,
        7,
        12,
        37,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        128,
        96,
        0,
        132,
        18,
        97,
        12,
        50,
        87,
        131,
        97,
        12,
        55,
        86,
        91,
        131,
        96,
        0,
        3,
        91,
        145,
        80,
        96,
        0,
        131,
        18,
        97,
        12,
        71,
        87,
        130,
        97,
        12,
        76,
        86,
        91,
        130,
        96,
        0,
        3,
        91,
        144,
        80,
        96,
        0,
        97,
        12,
        90,
        131,
        131,
        97,
        13,
        206,
        86,
        91,
        144,
        80,
        96,
        1,
        96,
        1,
        96,
        255,
        27,
        3,
        129,
        17,
        21,
        97,
        12,
        142,
        87,
        96,
        64,
        81,
        99,
        18,
        11,
        91,
        67,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        129,
        1,
        137,
        144,
        82,
        96,
        36,
        129,
        1,
        136,
        144,
        82,
        96,
        68,
        1,
        97,
        2,
        250,
        86,
        91,
        96,
        0,
        25,
        133,
        133,
        24,
        19,
        97,
        12,
        170,
        129,
        97,
        12,
        166,
        87,
        130,
        96,
        0,
        3,
        97,
        11,
        14,
        86,
        91,
        130,
        144,
        86,
        91,
        153,
        152,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        130,
        130,
        96,
        1,
        96,
        255,
        27,
        130,
        20,
        128,
        97,
        12,
        208,
        87,
        80,
        96,
        1,
        96,
        255,
        27,
        129,
        20,
        91,
        21,
        97,
        12,
        238,
        87,
        96,
        64,
        81,
        99,
        9,
        254,
        43,
        69,
        96,
        228,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        128,
        96,
        0,
        132,
        18,
        97,
        12,
        255,
        87,
        131,
        97,
        13,
        4,
        86,
        91,
        131,
        96,
        0,
        3,
        91,
        145,
        80,
        96,
        0,
        131,
        18,
        97,
        13,
        20,
        87,
        130,
        97,
        13,
        25,
        86,
        91,
        130,
        96,
        0,
        3,
        91,
        144,
        80,
        96,
        0,
        97,
        13,
        48,
        131,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        132,
        97,
        14,
        130,
        86,
        91,
        144,
        80,
        96,
        1,
        96,
        1,
        96,
        255,
        27,
        3,
        129,
        17,
        21,
        97,
        12,
        142,
        87,
        96,
        64,
        81,
        99,
        212,
        156,
        38,
        179,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        129,
        1,
        137,
        144,
        82,
        96,
        36,
        129,
        1,
        136,
        144,
        82,
        96,
        68,
        1,
        97,
        2,
        250,
        86,
        91,
        96,
        0,
        129,
        129,
        129,
        18,
        21,
        97,
        13,
        139,
        87,
        96,
        64,
        81,
        99,
        36,
        99,
        243,
        213,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        129,
        1,
        132,
        144,
        82,
        96,
        36,
        1,
        97,
        2,
        250,
        86,
        91,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        97,
        13,
        160,
        97,
        11,
        14,
        131,
        133,
        97,
        19,
        198,
        86,
        91,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        129,
        131,
        18,
        21,
        97,
        13,
        183,
        87,
        129,
        97,
        13,
        160,
        86,
        91,
        80,
        144,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        129,
        131,
        19,
        21,
        97,
        13,
        183,
        87,
        129,
        97,
        13,
        160,
        86,
        91,
        96,
        0,
        128,
        128,
        96,
        0,
        25,
        132,
        134,
        9,
        132,
        134,
        2,
        146,
        80,
        130,
        129,
        16,
        131,
        130,
        3,
        3,
        145,
        80,
        80,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        129,
        16,
        97,
        14,
        25,
        87,
        96,
        64,
        81,
        99,
        81,
        115,
        100,
        141,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        129,
        1,
        134,
        144,
        82,
        96,
        36,
        129,
        1,
        133,
        144,
        82,
        96,
        68,
        1,
        97,
        2,
        250,
        86,
        91,
        96,
        0,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        133,
        135,
        9,
        144,
        80,
        129,
        96,
        0,
        3,
        97,
        14,
        69,
        87,
        80,
        80,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        144,
        4,
        144,
        80,
        97,
        13,
        139,
        86,
        91,
        98,
        4,
        0,
        0,
        129,
        132,
        3,
        4,
        146,
        16,
        144,
        3,
        96,
        1,
        96,
        238,
        27,
        2,
        23,
        127,
        172,
        203,
        24,
        22,
        91,
        214,
        254,
        49,
        174,
        28,
        243,
        24,
        220,
        91,
        81,
        238,
        224,
        225,
        186,
        86,
        155,
        136,
        205,
        116,
        193,
        119,
        59,
        145,
        250,
        193,
        6,
        105,
        2,
        144,
        80,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        128,
        96,
        0,
        25,
        133,
        135,
        9,
        133,
        135,
        2,
        146,
        80,
        130,
        129,
        16,
        131,
        130,
        3,
        3,
        145,
        80,
        80,
        128,
        96,
        0,
        3,
        97,
        14,
        188,
        87,
        131,
        130,
        129,
        97,
        14,
        178,
        87,
        97,
        14,
        178,
        97,
        19,
        116,
        86,
        91,
        4,
        146,
        80,
        80,
        80,
        97,
        13,
        160,
        86,
        91,
        131,
        129,
        16,
        97,
        14,
        237,
        87,
        96,
        64,
        81,
        99,
        12,
        116,
        10,
        239,
        96,
        227,
        27,
        129,
        82,
        96,
        4,
        129,
        1,
        135,
        144,
        82,
        96,
        36,
        129,
        1,
        134,
        144,
        82,
        96,
        68,
        129,
        1,
        133,
        144,
        82,
        96,
        100,
        1,
        97,
        2,
        250,
        86,
        91,
        96,
        0,
        132,
        134,
        136,
        9,
        96,
        2,
        96,
        3,
        96,
        1,
        136,
        25,
        129,
        1,
        137,
        22,
        152,
        137,
        144,
        4,
        145,
        130,
        2,
        131,
        24,
        128,
        131,
        2,
        132,
        3,
        2,
        128,
        131,
        2,
        132,
        3,
        2,
        128,
        131,
        2,
        132,
        3,
        2,
        128,
        131,
        2,
        132,
        3,
        2,
        128,
        131,
        2,
        132,
        3,
        2,
        145,
        130,
        2,
        144,
        146,
        3,
        2,
        96,
        0,
        136,
        144,
        3,
        136,
        144,
        4,
        144,
        145,
        1,
        133,
        131,
        17,
        144,
        148,
        3,
        147,
        144,
        147,
        2,
        147,
        3,
        148,
        144,
        148,
        4,
        145,
        144,
        145,
        23,
        2,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        129,
        20,
        97,
        15,
        106,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        0,
        96,
        160,
        134,
        136,
        3,
        18,
        21,
        97,
        15,
        133,
        87,
        96,
        0,
        128,
        253,
        91,
        133,
        53,
        97,
        15,
        144,
        129,
        97,
        15,
        85,
        86,
        91,
        148,
        80,
        96,
        32,
        134,
        1,
        53,
        97,
        15,
        160,
        129,
        97,
        15,
        85,
        86,
        91,
        147,
        80,
        96,
        64,
        134,
        1,
        53,
        97,
        15,
        176,
        129,
        97,
        15,
        85,
        86,
        91,
        146,
        80,
        96,
        96,
        134,
        1,
        53,
        97,
        15,
        192,
        129,
        97,
        15,
        85,
        86,
        91,
        145,
        80,
        96,
        128,
        134,
        1,
        53,
        97,
        15,
        208,
        129,
        97,
        15,
        85,
        86,
        91,
        128,
        145,
        80,
        80,
        146,
        149,
        80,
        146,
        149,
        144,
        147,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        15,
        240,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        53,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        16,
        9,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        97,
        13,
        160,
        129,
        97,
        15,
        85,
        86,
        91,
        96,
        32,
        128,
        130,
        82,
        96,
        51,
        144,
        130,
        1,
        82,
        127,
        79,
        110,
        108,
        121,
        32,
        116,
        104,
        101,
        32,
        99,
        111,
        110,
        116,
        114,
        97,
        99,
        116,
        32,
        99,
        111,
        110,
        116,
        114,
        111,
        108,
        108,
        101,
        114,
        32,
        99,
        97,
        110,
        96,
        64,
        130,
        1,
        82,
        114,
        16,
        49,
        176,
        182,
        54,
        16,
        58,
        52,
        52,
        185,
        144,
        51,
        58,
        183,
        49,
        186,
        52,
        183,
        183,
        96,
        105,
        27,
        96,
        96,
        130,
        1,
        82,
        96,
        128,
        1,
        144,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        16,
        121,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        81,
        145,
        144,
        80,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        65,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        64,
        81,
        96,
        31,
        130,
        1,
        96,
        31,
        25,
        22,
        129,
        1,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        130,
        130,
        16,
        23,
        21,
        97,
        16,
        191,
        87,
        97,
        16,
        191,
        97,
        16,
        128,
        86,
        91,
        96,
        64,
        82,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        91,
        131,
        129,
        16,
        21,
        97,
        16,
        226,
        87,
        129,
        129,
        1,
        81,
        131,
        130,
        1,
        82,
        96,
        32,
        1,
        97,
        16,
        202,
        86,
        91,
        80,
        80,
        96,
        0,
        145,
        1,
        82,
        86,
        91,
        96,
        0,
        130,
        96,
        31,
        131,
        1,
        18,
        97,
        16,
        252,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        81,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        21,
        97,
        17,
        22,
        87,
        97,
        17,
        22,
        97,
        16,
        128,
        86,
        91,
        97,
        17,
        41,
        96,
        31,
        130,
        1,
        96,
        31,
        25,
        22,
        96,
        32,
        1,
        97,
        16,
        150,
        86,
        91,
        129,
        129,
        82,
        132,
        96,
        32,
        131,
        134,
        1,
        1,
        17,
        21,
        97,
        17,
        62,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        17,
        79,
        130,
        96,
        32,
        131,
        1,
        96,
        32,
        135,
        1,
        97,
        16,
        199,
        86,
        91,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        128,
        131,
        133,
        3,
        18,
        21,
        97,
        17,
        106,
        87,
        96,
        0,
        128,
        253,
        91,
        130,
        81,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        128,
        130,
        17,
        21,
        97,
        17,
        130,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        133,
        1,
        145,
        80,
        133,
        96,
        31,
        131,
        1,
        18,
        97,
        17,
        150,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        81,
        129,
        129,
        17,
        21,
        97,
        17,
        168,
        87,
        97,
        17,
        168,
        97,
        16,
        128,
        86,
        91,
        128,
        96,
        5,
        27,
        97,
        17,
        183,
        133,
        130,
        1,
        97,
        16,
        150,
        86,
        91,
        145,
        130,
        82,
        131,
        129,
        1,
        133,
        1,
        145,
        133,
        129,
        1,
        144,
        137,
        132,
        17,
        21,
        97,
        17,
        209,
        87,
        96,
        0,
        128,
        253,
        91,
        134,
        134,
        1,
        146,
        80,
        91,
        131,
        131,
        16,
        21,
        97,
        12,
        170,
        87,
        130,
        81,
        133,
        129,
        17,
        21,
        97,
        17,
        239,
        87,
        96,
        0,
        128,
        129,
        253,
        91,
        97,
        17,
        253,
        139,
        137,
        131,
        138,
        1,
        1,
        97,
        16,
        235,
        86,
        91,
        131,
        82,
        80,
        145,
        134,
        1,
        145,
        144,
        134,
        1,
        144,
        97,
        17,
        215,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        50,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        0,
        129,
        81,
        128,
        132,
        82,
        97,
        18,
        59,
        129,
        96,
        32,
        134,
        1,
        96,
        32,
        134,
        1,
        97,
        16,
        199,
        86,
        91,
        96,
        31,
        1,
        96,
        31,
        25,
        22,
        146,
        144,
        146,
        1,
        96,
        32,
        1,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        64,
        129,
        82,
        96,
        0,
        97,
        18,
        98,
        96,
        64,
        131,
        1,
        133,
        97,
        18,
        35,
        86,
        91,
        144,
        80,
        130,
        96,
        32,
        131,
        1,
        82,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        32,
        129,
        82,
        96,
        0,
        97,
        13,
        160,
        96,
        32,
        131,
        1,
        132,
        97,
        18,
        35,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        0,
        96,
        160,
        134,
        136,
        3,
        18,
        21,
        97,
        18,
        156,
        87,
        96,
        0,
        128,
        253,
        91,
        133,
        81,
        97,
        18,
        167,
        129,
        97,
        15,
        85,
        86,
        91,
        96,
        32,
        135,
        1,
        81,
        144,
        149,
        80,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        128,
        130,
        17,
        21,
        97,
        18,
        197,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        18,
        209,
        137,
        131,
        138,
        1,
        97,
        16,
        235,
        86,
        91,
        149,
        80,
        96,
        64,
        136,
        1,
        81,
        145,
        80,
        128,
        130,
        17,
        21,
        97,
        18,
        231,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        18,
        243,
        137,
        131,
        138,
        1,
        97,
        16,
        235,
        86,
        91,
        148,
        80,
        96,
        96,
        136,
        1,
        81,
        145,
        80,
        128,
        130,
        17,
        21,
        97,
        19,
        9,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        19,
        21,
        137,
        131,
        138,
        1,
        97,
        16,
        235,
        86,
        91,
        147,
        80,
        96,
        128,
        136,
        1,
        81,
        145,
        80,
        128,
        130,
        17,
        21,
        97,
        19,
        43,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        19,
        56,
        136,
        130,
        137,
        1,
        97,
        16,
        235,
        86,
        91,
        145,
        80,
        80,
        146,
        149,
        80,
        146,
        149,
        144,
        147,
        80,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        0,
        96,
        1,
        130,
        1,
        97,
        19,
        109,
        87,
        97,
        19,
        109,
        97,
        19,
        69,
        86,
        91,
        80,
        96,
        1,
        1,
        144,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        18,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        0,
        130,
        97,
        19,
        167,
        87,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        18,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        1,
        96,
        255,
        27,
        130,
        20,
        96,
        0,
        25,
        132,
        20,
        22,
        21,
        97,
        19,
        193,
        87,
        97,
        19,
        193,
        97,
        19,
        69,
        86,
        91,
        80,
        5,
        144,
        86,
        91,
        129,
        129,
        3,
        96,
        0,
        131,
        18,
        128,
        21,
        131,
        131,
        19,
        22,
        131,
        131,
        18,
        130,
        22,
        23,
        21,
        97,
        19,
        230,
        87,
        97,
        19,
        230,
        97,
        19,
        69,
        86,
        91,
        80,
        146,
        145,
        80,
        80,
        86,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        165,
        13,
        145,
        164,
        96,
        162,
        221,
        110,
        142,
        114,
        69,
        110,
        16,
        181,
        29,
        217,
        9,
        110,
        104,
        106,
        254,
        237,
        61,
        182,
        199,
        136,
        227,
        122,
        126,
        24,
        250,
        222,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        19,
        0,
        51,
    ];
    ///The bytecode of the contract.
    pub static FLEEKREWARD_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __BYTECODE,
    );
    #[rustfmt::skip]
    const __DEPLOYED_BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        4,
        54,
        16,
        97,
        1,
        33,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        90,
        186,
        31,
        71,
        17,
        97,
        0,
        173,
        87,
        128,
        99,
        217,
        181,
        196,
        165,
        17,
        97,
        0,
        113,
        87,
        128,
        99,
        217,
        181,
        196,
        165,
        20,
        97,
        2,
        64,
        87,
        128,
        99,
        226,
        210,
        191,
        227,
        20,
        97,
        2,
        83,
        87,
        128,
        99,
        232,
        234,
        5,
        75,
        20,
        97,
        2,
        102,
        87,
        128,
        99,
        247,
        124,
        71,
        145,
        20,
        97,
        2,
        121,
        87,
        128,
        99,
        247,
        163,
        8,
        6,
        20,
        97,
        2,
        140,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        90,
        186,
        31,
        71,
        20,
        97,
        2,
        9,
        87,
        128,
        99,
        93,
        189,
        21,
        242,
        20,
        97,
        2,
        18,
        87,
        128,
        99,
        160,
        53,
        177,
        254,
        20,
        97,
        2,
        27,
        87,
        128,
        99,
        162,
        202,
        179,
        161,
        20,
        97,
        2,
        36,
        87,
        128,
        99,
        199,
        35,
        18,
        157,
        20,
        97,
        2,
        55,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        40,
        205,
        75,
        109,
        17,
        97,
        0,
        244,
        87,
        128,
        99,
        40,
        205,
        75,
        109,
        20,
        97,
        1,
        157,
        87,
        128,
        99,
        81,
        87,
        25,
        0,
        20,
        97,
        1,
        176,
        87,
        128,
        99,
        84,
        126,
        234,
        193,
        20,
        97,
        1,
        219,
        87,
        128,
        99,
        86,
        165,
        114,
        213,
        20,
        97,
        1,
        227,
        87,
        128,
        99,
        89,
        151,
        78,
        56,
        20,
        97,
        1,
        246,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        19,
        250,
        237,
        230,
        20,
        97,
        1,
        38,
        87,
        128,
        99,
        20,
        89,
        69,
        122,
        20,
        97,
        1,
        66,
        87,
        128,
        99,
        22,
        246,
        51,
        104,
        20,
        97,
        1,
        87,
        87,
        128,
        99,
        39,
        153,
        69,
        157,
        20,
        97,
        1,
        138,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        97,
        1,
        47,
        96,
        12,
        84,
        129,
        86,
        91,
        96,
        64,
        81,
        144,
        129,
        82,
        96,
        32,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        97,
        1,
        85,
        97,
        1,
        80,
        54,
        96,
        4,
        97,
        15,
        109,
        86,
        91,
        97,
        2,
        159,
        86,
        91,
        0,
        91,
        97,
        1,
        122,
        97,
        1,
        101,
        54,
        96,
        4,
        97,
        15,
        222,
        86,
        91,
        96,
        8,
        96,
        32,
        82,
        96,
        0,
        144,
        129,
        82,
        96,
        64,
        144,
        32,
        84,
        96,
        255,
        22,
        129,
        86,
        91,
        96,
        64,
        81,
        144,
        21,
        21,
        129,
        82,
        96,
        32,
        1,
        97,
        1,
        57,
        86,
        91,
        97,
        1,
        85,
        97,
        1,
        152,
        54,
        96,
        4,
        97,
        15,
        222,
        86,
        91,
        96,
        12,
        85,
        86,
        91,
        97,
        1,
        85,
        97,
        1,
        171,
        54,
        96,
        4,
        97,
        15,
        222,
        86,
        91,
        96,
        9,
        85,
        86,
        91,
        96,
        3,
        84,
        97,
        1,
        195,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        86,
        91,
        96,
        64,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        145,
        22,
        129,
        82,
        96,
        32,
        1,
        97,
        1,
        57,
        86,
        91,
        97,
        1,
        85,
        97,
        3,
        130,
        86,
        91,
        97,
        1,
        85,
        97,
        1,
        241,
        54,
        96,
        4,
        97,
        15,
        222,
        86,
        91,
        96,
        10,
        85,
        86,
        91,
        97,
        1,
        85,
        97,
        2,
        4,
        54,
        96,
        4,
        97,
        15,
        222,
        86,
        91,
        97,
        4,
        60,
        86,
        91,
        97,
        1,
        47,
        96,
        9,
        84,
        129,
        86,
        91,
        97,
        1,
        47,
        96,
        10,
        84,
        129,
        86,
        91,
        97,
        1,
        47,
        96,
        11,
        84,
        129,
        86,
        91,
        96,
        1,
        84,
        97,
        1,
        195,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        86,
        91,
        97,
        1,
        47,
        96,
        6,
        84,
        129,
        86,
        91,
        96,
        5,
        84,
        97,
        1,
        195,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        86,
        91,
        96,
        4,
        84,
        97,
        1,
        195,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        86,
        91,
        97,
        1,
        85,
        97,
        2,
        116,
        54,
        96,
        4,
        97,
        15,
        247,
        86,
        91,
        97,
        9,
        91,
        86,
        91,
        96,
        0,
        84,
        97,
        1,
        195,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        86,
        91,
        97,
        1,
        85,
        97,
        2,
        154,
        54,
        96,
        4,
        97,
        15,
        222,
        86,
        91,
        96,
        11,
        85,
        86,
        91,
        96,
        7,
        84,
        96,
        255,
        22,
        21,
        97,
        3,
        3,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        36,
        128,
        130,
        1,
        82,
        127,
        82,
        101,
        119,
        97,
        114,
        100,
        115,
        32,
        99,
        111,
        110,
        116,
        114,
        97,
        99,
        116,
        32,
        97,
        108,
        114,
        101,
        97,
        100,
        121,
        32,
        105,
        110,
        105,
        116,
        105,
        97,
        108,
        96,
        68,
        130,
        1,
        82,
        99,
        26,
        94,
        153,
        89,
        96,
        226,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        135,
        22,
        23,
        144,
        85,
        96,
        2,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        149,
        134,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        145,
        130,
        22,
        23,
        144,
        145,
        85,
        96,
        5,
        128,
        84,
        146,
        134,
        22,
        146,
        130,
        22,
        146,
        144,
        146,
        23,
        144,
        145,
        85,
        96,
        4,
        128,
        84,
        147,
        133,
        22,
        147,
        130,
        22,
        147,
        144,
        147,
        23,
        144,
        146,
        85,
        96,
        3,
        128,
        84,
        145,
        144,
        147,
        22,
        145,
        22,
        23,
        144,
        85,
        80,
        96,
        10,
        84,
        96,
        6,
        85,
        96,
        7,
        128,
        84,
        96,
        255,
        25,
        22,
        96,
        1,
        23,
        144,
        85,
        86,
        91,
        96,
        1,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        20,
        97,
        3,
        234,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        37,
        96,
        36,
        130,
        1,
        82,
        127,
        67,
        97,
        108,
        108,
        101,
        114,
        32,
        109,
        117,
        115,
        116,
        32,
        98,
        101,
        32,
        116,
        104,
        101,
        32,
        112,
        101,
        110,
        100,
        105,
        110,
        103,
        32,
        67,
        111,
        110,
        116,
        114,
        96,
        68,
        130,
        1,
        82,
        100,
        55,
        182,
        54,
        50,
        185,
        96,
        217,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        97,
        2,
        250,
        86,
        91,
        96,
        0,
        128,
        84,
        96,
        1,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        129,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        131,
        22,
        129,
        23,
        132,
        85,
        96,
        64,
        81,
        145,
        144,
        146,
        22,
        146,
        131,
        145,
        127,
        249,
        182,
        162,
        135,
        0,
        87,
        157,
        92,
        143,
        171,
        80,
        240,
        172,
        45,
        202,
        165,
        33,
        9,
        184,
        92,
        54,
        156,
        79,
        81,
        31,
        204,
        135,
        51,
        48,
        171,
        108,
        187,
        145,
        144,
        163,
        80,
        86,
        91,
        96,
        0,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        20,
        97,
        4,
        102,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        2,
        250,
        144,
        97,
        16,
        20,
        86,
        91,
        128,
        96,
        4,
        96,
        0,
        144,
        84,
        144,
        97,
        1,
        0,
        10,
        144,
        4,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        99,
        144,
        12,
        240,
        207,
        96,
        64,
        81,
        129,
        99,
        255,
        255,
        255,
        255,
        22,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        4,
        186,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        4,
        222,
        145,
        144,
        97,
        16,
        103,
        86,
        91,
        3,
        97,
        5,
        63,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        43,
        96,
        36,
        130,
        1,
        82,
        127,
        99,
        97,
        110,
        110,
        111,
        116,
        32,
        100,
        105,
        115,
        116,
        114,
        105,
        98,
        117,
        116,
        101,
        32,
        114,
        101,
        119,
        97,
        114,
        100,
        115,
        32,
        102,
        111,
        114,
        32,
        99,
        117,
        96,
        68,
        130,
        1,
        82,
        106,
        14,
        78,
        76,
        173,
        206,
        132,
        12,
        174,
        13,
        236,
        109,
        96,
        171,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        97,
        2,
        250,
        86,
        91,
        96,
        0,
        129,
        129,
        82,
        96,
        8,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        96,
        255,
        22,
        21,
        97,
        5,
        177,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        42,
        96,
        36,
        130,
        1,
        82,
        127,
        114,
        101,
        119,
        97,
        114,
        100,
        115,
        32,
        97,
        108,
        114,
        101,
        97,
        100,
        121,
        32,
        100,
        105,
        115,
        116,
        114,
        105,
        98,
        117,
        116,
        101,
        100,
        32,
        102,
        111,
        114,
        32,
        96,
        68,
        130,
        1,
        82,
        105,
        14,
        141,
        13,
        46,
        100,
        12,
        174,
        13,
        236,
        109,
        96,
        179,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        97,
        2,
        250,
        86,
        91,
        96,
        3,
        84,
        96,
        64,
        81,
        99,
        137,
        177,
        121,
        139,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        129,
        1,
        131,
        144,
        82,
        96,
        0,
        145,
        97,
        6,
        43,
        145,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        145,
        22,
        144,
        99,
        137,
        177,
        121,
        139,
        144,
        96,
        36,
        1,
        91,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        6,
        2,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        6,
        38,
        145,
        144,
        97,
        16,
        103,
        86,
        91,
        97,
        10,
        36,
        86,
        91,
        96,
        3,
        84,
        96,
        64,
        81,
        99,
        3,
        174,
        139,
        241,
        96,
        225,
        27,
        129,
        82,
        96,
        4,
        129,
        1,
        133,
        144,
        82,
        145,
        146,
        80,
        96,
        0,
        145,
        97,
        6,
        100,
        145,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        144,
        99,
        7,
        93,
        23,
        226,
        144,
        96,
        36,
        1,
        97,
        5,
        229,
        86,
        91,
        144,
        80,
        96,
        0,
        97,
        6,
        114,
        131,
        131,
        97,
        10,
        169,
        86,
        91,
        144,
        80,
        96,
        0,
        97,
        6,
        136,
        130,
        103,
        10,
        104,
        137,
        6,
        189,
        139,
        0,
        0,
        97,
        11,
        234,
        86,
        91,
        96,
        3,
        84,
        96,
        64,
        81,
        99,
        55,
        44,
        26,
        255,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        129,
        1,
        136,
        144,
        82,
        145,
        146,
        80,
        96,
        0,
        145,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        145,
        22,
        144,
        99,
        55,
        44,
        26,
        255,
        144,
        96,
        36,
        1,
        96,
        0,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        6,
        215,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        0,
        130,
        62,
        96,
        31,
        61,
        144,
        129,
        1,
        96,
        31,
        25,
        22,
        130,
        1,
        96,
        64,
        82,
        97,
        6,
        255,
        145,
        144,
        129,
        1,
        144,
        97,
        17,
        87,
        86,
        91,
        144,
        80,
        96,
        0,
        91,
        129,
        81,
        129,
        16,
        21,
        97,
        9,
        58,
        87,
        96,
        3,
        84,
        130,
        81,
        96,
        0,
        145,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        144,
        99,
        211,
        75,
        13,
        175,
        144,
        133,
        144,
        133,
        144,
        129,
        16,
        97,
        7,
        55,
        87,
        97,
        7,
        55,
        97,
        18,
        13,
        86,
        91,
        96,
        32,
        2,
        96,
        32,
        1,
        1,
        81,
        138,
        96,
        64,
        81,
        131,
        99,
        255,
        255,
        255,
        255,
        22,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        7,
        93,
        146,
        145,
        144,
        97,
        18,
        79,
        86,
        91,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        7,
        122,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        7,
        158,
        145,
        144,
        97,
        16,
        103,
        86,
        91,
        144,
        80,
        96,
        0,
        97,
        7,
        181,
        136,
        97,
        7,
        175,
        132,
        97,
        10,
        36,
        86,
        91,
        144,
        97,
        12,
        183,
        86,
        91,
        144,
        80,
        96,
        0,
        97,
        7,
        195,
        130,
        135,
        97,
        11,
        234,
        86,
        91,
        96,
        5,
        84,
        134,
        81,
        145,
        146,
        80,
        96,
        0,
        145,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        145,
        22,
        144,
        99,
        13,
        128,
        191,
        100,
        144,
        136,
        144,
        136,
        144,
        129,
        16,
        97,
        7,
        242,
        87,
        97,
        7,
        242,
        97,
        18,
        13,
        86,
        91,
        96,
        32,
        2,
        96,
        32,
        1,
        1,
        81,
        96,
        64,
        81,
        130,
        99,
        255,
        255,
        255,
        255,
        22,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        8,
        22,
        145,
        144,
        97,
        18,
        113,
        86,
        91,
        96,
        0,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        8,
        51,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        0,
        130,
        62,
        96,
        31,
        61,
        144,
        129,
        1,
        96,
        31,
        25,
        22,
        130,
        1,
        96,
        64,
        82,
        97,
        8,
        91,
        145,
        144,
        129,
        1,
        144,
        97,
        18,
        132,
        86,
        91,
        80,
        80,
        96,
        2,
        84,
        146,
        147,
        80,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        145,
        22,
        144,
        80,
        99,
        64,
        193,
        15,
        25,
        130,
        97,
        8,
        128,
        133,
        97,
        13,
        100,
        86,
        91,
        96,
        64,
        81,
        96,
        1,
        96,
        1,
        96,
        224,
        27,
        3,
        25,
        96,
        224,
        133,
        144,
        27,
        22,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        146,
        22,
        96,
        4,
        131,
        1,
        82,
        96,
        36,
        130,
        1,
        82,
        96,
        68,
        1,
        96,
        0,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        96,
        0,
        135,
        128,
        59,
        21,
        128,
        21,
        97,
        8,
        198,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        90,
        241,
        21,
        128,
        21,
        97,
        8,
        218,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        128,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        127,
        232,
        234,
        61,
        77,
        208,
        162,
        234,
        175,
        63,
        117,
        50,
        173,
        57,
        18,
        85,
        84,
        79,
        138,
        75,
        207,
        120,
        248,
        80,
        187,
        255,
        97,
        213,
        186,
        201,
        247,
        117,
        82,
        97,
        9,
        18,
        132,
        97,
        13,
        100,
        86,
        91,
        96,
        64,
        81,
        144,
        129,
        82,
        96,
        32,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        162,
        80,
        80,
        80,
        80,
        128,
        128,
        97,
        9,
        50,
        144,
        97,
        19,
        91,
        86,
        91,
        145,
        80,
        80,
        97,
        7,
        4,
        86,
        91,
        80,
        80,
        80,
        96,
        0,
        147,
        132,
        82,
        80,
        80,
        96,
        8,
        96,
        32,
        82,
        80,
        96,
        64,
        144,
        32,
        128,
        84,
        96,
        255,
        25,
        22,
        96,
        1,
        23,
        144,
        85,
        86,
        91,
        96,
        0,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        20,
        97,
        9,
        133,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        2,
        250,
        144,
        97,
        16,
        20,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        97,
        9,
        211,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        21,
        96,
        36,
        130,
        1,
        82,
        116,
        17,
        219,
        221,
        153,
        92,
        155,
        155,
        220,
        136,
        24,
        216,
        91,
        157,
        8,
        24,
        153,
        72,
        27,
        157,
        91,
        27,
        96,
        90,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        2,
        250,
        86,
        91,
        96,
        1,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        129,
        22,
        145,
        130,
        23,
        144,
        146,
        85,
        96,
        0,
        128,
        84,
        96,
        64,
        81,
        146,
        147,
        22,
        145,
        127,
        255,
        150,
        8,
        22,
        6,
        159,
        193,
        16,
        17,
        247,
        127,
        239,
        142,
        89,
        42,
        198,
        252,
        101,
        94,
        232,
        111,
        16,
        168,
        176,
        227,
        252,
        175,
        106,
        235,
        225,
        143,
        100,
        145,
        144,
        163,
        80,
        86,
        91,
        96,
        0,
        97,
        10,
        60,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        96,
        1,
        96,
        255,
        27,
        97,
        19,
        138,
        86,
        91,
        130,
        18,
        21,
        97,
        10,
        95,
        87,
        96,
        64,
        81,
        99,
        153,
        71,
        78,
        235,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        129,
        1,
        131,
        144,
        82,
        96,
        36,
        1,
        97,
        2,
        250,
        86,
        91,
        97,
        10,
        120,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        96,
        1,
        96,
        1,
        96,
        255,
        27,
        3,
        97,
        19,
        138,
        86,
        91,
        130,
        19,
        21,
        97,
        10,
        155,
        87,
        96,
        64,
        81,
        99,
        157,
        88,
        16,
        145,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        129,
        1,
        131,
        144,
        82,
        96,
        36,
        1,
        97,
        2,
        250,
        86,
        91,
        80,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        2,
        144,
        86,
        91,
        96,
        0,
        128,
        97,
        10,
        182,
        132,
        132,
        97,
        13,
        145,
        86,
        91,
        144,
        80,
        96,
        0,
        97,
        10,
        196,
        130,
        133,
        97,
        12,
        183,
        86,
        91,
        144,
        80,
        96,
        0,
        97,
        10,
        251,
        97,
        10,
        236,
        131,
        97,
        10,
        230,
        96,
        12,
        84,
        96,
        11,
        84,
        97,
        12,
        183,
        144,
        145,
        144,
        99,
        255,
        255,
        255,
        255,
        22,
        86,
        91,
        144,
        97,
        11,
        234,
        86,
        91,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        144,
        97,
        13,
        145,
        86,
        91,
        144,
        80,
        96,
        0,
        97,
        11,
        17,
        97,
        11,
        14,
        131,
        96,
        9,
        84,
        97,
        13,
        167,
        86,
        91,
        144,
        86,
        91,
        144,
        80,
        96,
        0,
        97,
        11,
        42,
        96,
        6,
        84,
        131,
        97,
        11,
        234,
        144,
        145,
        144,
        99,
        255,
        255,
        255,
        255,
        22,
        86,
        91,
        144,
        80,
        96,
        0,
        97,
        11,
        61,
        97,
        11,
        14,
        131,
        96,
        10,
        84,
        97,
        13,
        190,
        86,
        91,
        144,
        80,
        128,
        96,
        6,
        129,
        144,
        85,
        80,
        96,
        0,
        96,
        2,
        96,
        0,
        144,
        84,
        144,
        97,
        1,
        0,
        10,
        144,
        4,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        99,
        24,
        22,
        13,
        221,
        96,
        64,
        81,
        129,
        99,
        255,
        255,
        255,
        255,
        22,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        11,
        155,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        11,
        191,
        145,
        144,
        97,
        16,
        103,
        86,
        91,
        144,
        80,
        97,
        11,
        220,
        97,
        11,
        207,
        97,
        1,
        109,
        97,
        10,
        36,
        86,
        91,
        97,
        7,
        175,
        132,
        97,
        10,
        230,
        133,
        97,
        10,
        36,
        86,
        91,
        154,
        153,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        130,
        130,
        96,
        1,
        96,
        255,
        27,
        130,
        20,
        128,
        97,
        12,
        3,
        87,
        80,
        96,
        1,
        96,
        255,
        27,
        129,
        20,
        91,
        21,
        97,
        12,
        33,
        87,
        96,
        64,
        81,
        99,
        166,
        7,
        12,
        37,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        128,
        96,
        0,
        132,
        18,
        97,
        12,
        50,
        87,
        131,
        97,
        12,
        55,
        86,
        91,
        131,
        96,
        0,
        3,
        91,
        145,
        80,
        96,
        0,
        131,
        18,
        97,
        12,
        71,
        87,
        130,
        97,
        12,
        76,
        86,
        91,
        130,
        96,
        0,
        3,
        91,
        144,
        80,
        96,
        0,
        97,
        12,
        90,
        131,
        131,
        97,
        13,
        206,
        86,
        91,
        144,
        80,
        96,
        1,
        96,
        1,
        96,
        255,
        27,
        3,
        129,
        17,
        21,
        97,
        12,
        142,
        87,
        96,
        64,
        81,
        99,
        18,
        11,
        91,
        67,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        129,
        1,
        137,
        144,
        82,
        96,
        36,
        129,
        1,
        136,
        144,
        82,
        96,
        68,
        1,
        97,
        2,
        250,
        86,
        91,
        96,
        0,
        25,
        133,
        133,
        24,
        19,
        97,
        12,
        170,
        129,
        97,
        12,
        166,
        87,
        130,
        96,
        0,
        3,
        97,
        11,
        14,
        86,
        91,
        130,
        144,
        86,
        91,
        153,
        152,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        130,
        130,
        96,
        1,
        96,
        255,
        27,
        130,
        20,
        128,
        97,
        12,
        208,
        87,
        80,
        96,
        1,
        96,
        255,
        27,
        129,
        20,
        91,
        21,
        97,
        12,
        238,
        87,
        96,
        64,
        81,
        99,
        9,
        254,
        43,
        69,
        96,
        228,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        128,
        96,
        0,
        132,
        18,
        97,
        12,
        255,
        87,
        131,
        97,
        13,
        4,
        86,
        91,
        131,
        96,
        0,
        3,
        91,
        145,
        80,
        96,
        0,
        131,
        18,
        97,
        13,
        20,
        87,
        130,
        97,
        13,
        25,
        86,
        91,
        130,
        96,
        0,
        3,
        91,
        144,
        80,
        96,
        0,
        97,
        13,
        48,
        131,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        132,
        97,
        14,
        130,
        86,
        91,
        144,
        80,
        96,
        1,
        96,
        1,
        96,
        255,
        27,
        3,
        129,
        17,
        21,
        97,
        12,
        142,
        87,
        96,
        64,
        81,
        99,
        212,
        156,
        38,
        179,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        129,
        1,
        137,
        144,
        82,
        96,
        36,
        129,
        1,
        136,
        144,
        82,
        96,
        68,
        1,
        97,
        2,
        250,
        86,
        91,
        96,
        0,
        129,
        129,
        129,
        18,
        21,
        97,
        13,
        139,
        87,
        96,
        64,
        81,
        99,
        36,
        99,
        243,
        213,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        129,
        1,
        132,
        144,
        82,
        96,
        36,
        1,
        97,
        2,
        250,
        86,
        91,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        97,
        13,
        160,
        97,
        11,
        14,
        131,
        133,
        97,
        19,
        198,
        86,
        91,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        129,
        131,
        18,
        21,
        97,
        13,
        183,
        87,
        129,
        97,
        13,
        160,
        86,
        91,
        80,
        144,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        129,
        131,
        19,
        21,
        97,
        13,
        183,
        87,
        129,
        97,
        13,
        160,
        86,
        91,
        96,
        0,
        128,
        128,
        96,
        0,
        25,
        132,
        134,
        9,
        132,
        134,
        2,
        146,
        80,
        130,
        129,
        16,
        131,
        130,
        3,
        3,
        145,
        80,
        80,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        129,
        16,
        97,
        14,
        25,
        87,
        96,
        64,
        81,
        99,
        81,
        115,
        100,
        141,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        129,
        1,
        134,
        144,
        82,
        96,
        36,
        129,
        1,
        133,
        144,
        82,
        96,
        68,
        1,
        97,
        2,
        250,
        86,
        91,
        96,
        0,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        133,
        135,
        9,
        144,
        80,
        129,
        96,
        0,
        3,
        97,
        14,
        69,
        87,
        80,
        80,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        144,
        4,
        144,
        80,
        97,
        13,
        139,
        86,
        91,
        98,
        4,
        0,
        0,
        129,
        132,
        3,
        4,
        146,
        16,
        144,
        3,
        96,
        1,
        96,
        238,
        27,
        2,
        23,
        127,
        172,
        203,
        24,
        22,
        91,
        214,
        254,
        49,
        174,
        28,
        243,
        24,
        220,
        91,
        81,
        238,
        224,
        225,
        186,
        86,
        155,
        136,
        205,
        116,
        193,
        119,
        59,
        145,
        250,
        193,
        6,
        105,
        2,
        144,
        80,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        128,
        96,
        0,
        25,
        133,
        135,
        9,
        133,
        135,
        2,
        146,
        80,
        130,
        129,
        16,
        131,
        130,
        3,
        3,
        145,
        80,
        80,
        128,
        96,
        0,
        3,
        97,
        14,
        188,
        87,
        131,
        130,
        129,
        97,
        14,
        178,
        87,
        97,
        14,
        178,
        97,
        19,
        116,
        86,
        91,
        4,
        146,
        80,
        80,
        80,
        97,
        13,
        160,
        86,
        91,
        131,
        129,
        16,
        97,
        14,
        237,
        87,
        96,
        64,
        81,
        99,
        12,
        116,
        10,
        239,
        96,
        227,
        27,
        129,
        82,
        96,
        4,
        129,
        1,
        135,
        144,
        82,
        96,
        36,
        129,
        1,
        134,
        144,
        82,
        96,
        68,
        129,
        1,
        133,
        144,
        82,
        96,
        100,
        1,
        97,
        2,
        250,
        86,
        91,
        96,
        0,
        132,
        134,
        136,
        9,
        96,
        2,
        96,
        3,
        96,
        1,
        136,
        25,
        129,
        1,
        137,
        22,
        152,
        137,
        144,
        4,
        145,
        130,
        2,
        131,
        24,
        128,
        131,
        2,
        132,
        3,
        2,
        128,
        131,
        2,
        132,
        3,
        2,
        128,
        131,
        2,
        132,
        3,
        2,
        128,
        131,
        2,
        132,
        3,
        2,
        128,
        131,
        2,
        132,
        3,
        2,
        145,
        130,
        2,
        144,
        146,
        3,
        2,
        96,
        0,
        136,
        144,
        3,
        136,
        144,
        4,
        144,
        145,
        1,
        133,
        131,
        17,
        144,
        148,
        3,
        147,
        144,
        147,
        2,
        147,
        3,
        148,
        144,
        148,
        4,
        145,
        144,
        145,
        23,
        2,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        129,
        20,
        97,
        15,
        106,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        0,
        96,
        160,
        134,
        136,
        3,
        18,
        21,
        97,
        15,
        133,
        87,
        96,
        0,
        128,
        253,
        91,
        133,
        53,
        97,
        15,
        144,
        129,
        97,
        15,
        85,
        86,
        91,
        148,
        80,
        96,
        32,
        134,
        1,
        53,
        97,
        15,
        160,
        129,
        97,
        15,
        85,
        86,
        91,
        147,
        80,
        96,
        64,
        134,
        1,
        53,
        97,
        15,
        176,
        129,
        97,
        15,
        85,
        86,
        91,
        146,
        80,
        96,
        96,
        134,
        1,
        53,
        97,
        15,
        192,
        129,
        97,
        15,
        85,
        86,
        91,
        145,
        80,
        96,
        128,
        134,
        1,
        53,
        97,
        15,
        208,
        129,
        97,
        15,
        85,
        86,
        91,
        128,
        145,
        80,
        80,
        146,
        149,
        80,
        146,
        149,
        144,
        147,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        15,
        240,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        53,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        16,
        9,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        97,
        13,
        160,
        129,
        97,
        15,
        85,
        86,
        91,
        96,
        32,
        128,
        130,
        82,
        96,
        51,
        144,
        130,
        1,
        82,
        127,
        79,
        110,
        108,
        121,
        32,
        116,
        104,
        101,
        32,
        99,
        111,
        110,
        116,
        114,
        97,
        99,
        116,
        32,
        99,
        111,
        110,
        116,
        114,
        111,
        108,
        108,
        101,
        114,
        32,
        99,
        97,
        110,
        96,
        64,
        130,
        1,
        82,
        114,
        16,
        49,
        176,
        182,
        54,
        16,
        58,
        52,
        52,
        185,
        144,
        51,
        58,
        183,
        49,
        186,
        52,
        183,
        183,
        96,
        105,
        27,
        96,
        96,
        130,
        1,
        82,
        96,
        128,
        1,
        144,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        16,
        121,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        81,
        145,
        144,
        80,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        65,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        64,
        81,
        96,
        31,
        130,
        1,
        96,
        31,
        25,
        22,
        129,
        1,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        130,
        130,
        16,
        23,
        21,
        97,
        16,
        191,
        87,
        97,
        16,
        191,
        97,
        16,
        128,
        86,
        91,
        96,
        64,
        82,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        91,
        131,
        129,
        16,
        21,
        97,
        16,
        226,
        87,
        129,
        129,
        1,
        81,
        131,
        130,
        1,
        82,
        96,
        32,
        1,
        97,
        16,
        202,
        86,
        91,
        80,
        80,
        96,
        0,
        145,
        1,
        82,
        86,
        91,
        96,
        0,
        130,
        96,
        31,
        131,
        1,
        18,
        97,
        16,
        252,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        81,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        21,
        97,
        17,
        22,
        87,
        97,
        17,
        22,
        97,
        16,
        128,
        86,
        91,
        97,
        17,
        41,
        96,
        31,
        130,
        1,
        96,
        31,
        25,
        22,
        96,
        32,
        1,
        97,
        16,
        150,
        86,
        91,
        129,
        129,
        82,
        132,
        96,
        32,
        131,
        134,
        1,
        1,
        17,
        21,
        97,
        17,
        62,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        17,
        79,
        130,
        96,
        32,
        131,
        1,
        96,
        32,
        135,
        1,
        97,
        16,
        199,
        86,
        91,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        128,
        131,
        133,
        3,
        18,
        21,
        97,
        17,
        106,
        87,
        96,
        0,
        128,
        253,
        91,
        130,
        81,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        128,
        130,
        17,
        21,
        97,
        17,
        130,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        133,
        1,
        145,
        80,
        133,
        96,
        31,
        131,
        1,
        18,
        97,
        17,
        150,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        81,
        129,
        129,
        17,
        21,
        97,
        17,
        168,
        87,
        97,
        17,
        168,
        97,
        16,
        128,
        86,
        91,
        128,
        96,
        5,
        27,
        97,
        17,
        183,
        133,
        130,
        1,
        97,
        16,
        150,
        86,
        91,
        145,
        130,
        82,
        131,
        129,
        1,
        133,
        1,
        145,
        133,
        129,
        1,
        144,
        137,
        132,
        17,
        21,
        97,
        17,
        209,
        87,
        96,
        0,
        128,
        253,
        91,
        134,
        134,
        1,
        146,
        80,
        91,
        131,
        131,
        16,
        21,
        97,
        12,
        170,
        87,
        130,
        81,
        133,
        129,
        17,
        21,
        97,
        17,
        239,
        87,
        96,
        0,
        128,
        129,
        253,
        91,
        97,
        17,
        253,
        139,
        137,
        131,
        138,
        1,
        1,
        97,
        16,
        235,
        86,
        91,
        131,
        82,
        80,
        145,
        134,
        1,
        145,
        144,
        134,
        1,
        144,
        97,
        17,
        215,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        50,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        0,
        129,
        81,
        128,
        132,
        82,
        97,
        18,
        59,
        129,
        96,
        32,
        134,
        1,
        96,
        32,
        134,
        1,
        97,
        16,
        199,
        86,
        91,
        96,
        31,
        1,
        96,
        31,
        25,
        22,
        146,
        144,
        146,
        1,
        96,
        32,
        1,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        64,
        129,
        82,
        96,
        0,
        97,
        18,
        98,
        96,
        64,
        131,
        1,
        133,
        97,
        18,
        35,
        86,
        91,
        144,
        80,
        130,
        96,
        32,
        131,
        1,
        82,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        32,
        129,
        82,
        96,
        0,
        97,
        13,
        160,
        96,
        32,
        131,
        1,
        132,
        97,
        18,
        35,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        0,
        96,
        160,
        134,
        136,
        3,
        18,
        21,
        97,
        18,
        156,
        87,
        96,
        0,
        128,
        253,
        91,
        133,
        81,
        97,
        18,
        167,
        129,
        97,
        15,
        85,
        86,
        91,
        96,
        32,
        135,
        1,
        81,
        144,
        149,
        80,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        128,
        130,
        17,
        21,
        97,
        18,
        197,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        18,
        209,
        137,
        131,
        138,
        1,
        97,
        16,
        235,
        86,
        91,
        149,
        80,
        96,
        64,
        136,
        1,
        81,
        145,
        80,
        128,
        130,
        17,
        21,
        97,
        18,
        231,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        18,
        243,
        137,
        131,
        138,
        1,
        97,
        16,
        235,
        86,
        91,
        148,
        80,
        96,
        96,
        136,
        1,
        81,
        145,
        80,
        128,
        130,
        17,
        21,
        97,
        19,
        9,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        19,
        21,
        137,
        131,
        138,
        1,
        97,
        16,
        235,
        86,
        91,
        147,
        80,
        96,
        128,
        136,
        1,
        81,
        145,
        80,
        128,
        130,
        17,
        21,
        97,
        19,
        43,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        19,
        56,
        136,
        130,
        137,
        1,
        97,
        16,
        235,
        86,
        91,
        145,
        80,
        80,
        146,
        149,
        80,
        146,
        149,
        144,
        147,
        80,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        0,
        96,
        1,
        130,
        1,
        97,
        19,
        109,
        87,
        97,
        19,
        109,
        97,
        19,
        69,
        86,
        91,
        80,
        96,
        1,
        1,
        144,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        18,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        0,
        130,
        97,
        19,
        167,
        87,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        18,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        1,
        96,
        255,
        27,
        130,
        20,
        96,
        0,
        25,
        132,
        20,
        22,
        21,
        97,
        19,
        193,
        87,
        97,
        19,
        193,
        97,
        19,
        69,
        86,
        91,
        80,
        5,
        144,
        86,
        91,
        129,
        129,
        3,
        96,
        0,
        131,
        18,
        128,
        21,
        131,
        131,
        19,
        22,
        131,
        131,
        18,
        130,
        22,
        23,
        21,
        97,
        19,
        230,
        87,
        97,
        19,
        230,
        97,
        19,
        69,
        86,
        91,
        80,
        146,
        145,
        80,
        80,
        86,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        165,
        13,
        145,
        164,
        96,
        162,
        221,
        110,
        142,
        114,
        69,
        110,
        16,
        181,
        29,
        217,
        9,
        110,
        104,
        106,
        254,
        237,
        61,
        182,
        199,
        136,
        227,
        122,
        126,
        24,
        250,
        222,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        19,
        0,
        51,
    ];
    ///The deployed bytecode of the contract.
    pub static FLEEKREWARD_DEPLOYED_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __DEPLOYED_BYTECODE,
    );
    pub struct FleekReward<M>(::ethers::contract::Contract<M>);
    impl<M> ::core::clone::Clone for FleekReward<M> {
        fn clone(&self) -> Self {
            Self(::core::clone::Clone::clone(&self.0))
        }
    }
    impl<M> ::core::ops::Deref for FleekReward<M> {
        type Target = ::ethers::contract::Contract<M>;
        fn deref(&self) -> &Self::Target {
            &self.0
        }
    }
    impl<M> ::core::ops::DerefMut for FleekReward<M> {
        fn deref_mut(&mut self) -> &mut Self::Target {
            &mut self.0
        }
    }
    impl<M> ::core::fmt::Debug for FleekReward<M> {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            f.debug_tuple(stringify!(FleekReward)).field(&self.address()).finish()
        }
    }
    impl<M: ::ethers::providers::Middleware> FleekReward<M> {
        /// Creates a new contract instance with the specified `ethers` client at
        /// `address`. The contract derefs to a `ethers::Contract` object.
        pub fn new<T: Into<::ethers::core::types::Address>>(
            address: T,
            client: ::std::sync::Arc<M>,
        ) -> Self {
            Self(
                ::ethers::contract::Contract::new(
                    address.into(),
                    FLEEKREWARD_ABI.clone(),
                    client,
                ),
            )
        }
        /// Constructs the general purpose `Deployer` instance based on the provided constructor arguments and sends it.
        /// Returns a new instance of a deployer that returns an instance of this contract after sending the transaction
        ///
        /// Notes:
        /// - If there are no constructor arguments, you should pass `()` as the argument.
        /// - The default poll duration is 7 seconds.
        /// - The default number of confirmations is 1 block.
        ///
        ///
        /// # Example
        ///
        /// Generate contract bindings with `abigen!` and deploy a new contract instance.
        ///
        /// *Note*: this requires a `bytecode` and `abi` object in the `greeter.json` artifact.
        ///
        /// ```ignore
        /// # async fn deploy<M: ethers::providers::Middleware>(client: ::std::sync::Arc<M>) {
        ///     abigen!(Greeter, "../greeter.json");
        ///
        ///    let greeter_contract = Greeter::deploy(client, "Hello world!".to_string()).unwrap().send().await.unwrap();
        ///    let msg = greeter_contract.greet().call().await.unwrap();
        /// # }
        /// ```
        pub fn deploy<T: ::ethers::core::abi::Tokenize>(
            client: ::std::sync::Arc<M>,
            constructor_args: T,
        ) -> ::core::result::Result<
            ::ethers::contract::builders::ContractDeployer<M, Self>,
            ::ethers::contract::ContractError<M>,
        > {
            let factory = ::ethers::contract::ContractFactory::new(
                FLEEKREWARD_ABI.clone(),
                FLEEKREWARD_BYTECODE.clone().into(),
                client,
            );
            let deployer = factory.deploy(constructor_args)?;
            let deployer = ::ethers::contract::ContractDeployer::new(deployer);
            Ok(deployer)
        }
        ///Calls the contract's `acceptTransfer` (0x547eeac1) function
        pub fn accept_transfer(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([84, 126, 234, 193], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `controller` (0xf77c4791) function
        pub fn controller(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            ::ethers::core::types::Address,
        > {
            self.0
                .method_hash([247, 124, 71, 145], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `cost` (0x13faede6) function
        pub fn cost(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::I256> {
            self.0
                .method_hash([19, 250, 237, 230], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `distributeRewards` (0x59974e38) function
        pub fn distribute_rewards(
            &self,
            epoch: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([89, 151, 78, 56], epoch)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `epochManager` (0xe2d2bfe3) function
        pub fn epoch_manager(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            ::ethers::core::types::Address,
        > {
            self.0
                .method_hash([226, 210, 191, 227], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `inflationInLastEpoch` (0xc723129d) function
        pub fn inflation_in_last_epoch(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::I256> {
            self.0
                .method_hash([199, 35, 18, 157], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `initialize` (0x1459457a) function
        pub fn initialize(
            &self,
            controller: ::ethers::core::types::Address,
            token: ::ethers::core::types::Address,
            epoch: ::ethers::core::types::Address,
            aggregator: ::ethers::core::types::Address,
            registry: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash(
                    [20, 89, 69, 122],
                    (controller, token, epoch, aggregator, registry),
                )
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `maxInflation` (0x5dbd15f2) function
        pub fn max_inflation(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::I256> {
            self.0
                .method_hash([93, 189, 21, 242], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `minInflationFactor` (0x5aba1f47) function
        pub fn min_inflation_factor(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::I256> {
            self.0
                .method_hash([90, 186, 31, 71], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `nodeRegistry` (0xd9b5c4a5) function
        pub fn node_registry(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            ::ethers::core::types::Address,
        > {
            self.0
                .method_hash([217, 181, 196, 165], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `pendingController` (0xa2cab3a1) function
        pub fn pending_controller(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            ::ethers::core::types::Address,
        > {
            self.0
                .method_hash([162, 202, 179, 161], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `price` (0xa035b1fe) function
        pub fn price(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::I256> {
            self.0
                .method_hash([160, 53, 177, 254], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `rewardsAggregator` (0x51571900) function
        pub fn rewards_aggregator(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            ::ethers::core::types::Address,
        > {
            self.0
                .method_hash([81, 87, 25, 0], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `rewardsDistribution` (0x16f63368) function
        pub fn rewards_distribution(
            &self,
            p0: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([22, 246, 51, 104], p0)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `setCost` (0x2799459d) function
        pub fn set_cost(
            &self,
            cost: ::ethers::core::types::I256,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([39, 153, 69, 157], cost)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `setInflationRate` (0x56a572d5) function
        pub fn set_inflation_rate(
            &self,
            inflation_rate: ::ethers::core::types::I256,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([86, 165, 114, 213], inflation_rate)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `setMinInflationFactor` (0x28cd4b6d) function
        pub fn set_min_inflation_factor(
            &self,
            min_inflation_factor: ::ethers::core::types::I256,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([40, 205, 75, 109], min_inflation_factor)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `setPrice` (0xf7a30806) function
        pub fn set_price(
            &self,
            price: ::ethers::core::types::I256,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([247, 163, 8, 6], price)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `transferController` (0xe8ea054b) function
        pub fn transfer_controller(
            &self,
            new_controller: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([232, 234, 5, 75], new_controller)
                .expect("method not found (this should never happen)")
        }
        ///Gets the contract's `NewController` event
        pub fn new_controller_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            NewControllerFilter,
        > {
            self.0.event()
        }
        ///Gets the contract's `NewPendingController` event
        pub fn new_pending_controller_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            NewPendingControllerFilter,
        > {
            self.0.event()
        }
        ///Gets the contract's `RewardMinted` event
        pub fn reward_minted_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            RewardMintedFilter,
        > {
            self.0.event()
        }
        /// Returns an `Event` builder for all the events of this contract.
        pub fn events(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            FleekRewardEvents,
        > {
            self.0.event_with_filter(::core::default::Default::default())
        }
    }
    impl<M: ::ethers::providers::Middleware> From<::ethers::contract::Contract<M>>
    for FleekReward<M> {
        fn from(contract: ::ethers::contract::Contract<M>) -> Self {
            Self::new(contract.address(), contract.client())
        }
    }
    ///Custom Error type `PRBMath_MulDiv18_Overflow` with signature `PRBMath_MulDiv18_Overflow(uint256,uint256)` and selector `0x5173648d`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(
        name = "PRBMath_MulDiv18_Overflow",
        abi = "PRBMath_MulDiv18_Overflow(uint256,uint256)"
    )]
    pub struct PRBMath_MulDiv18_Overflow {
        pub x: ::ethers::core::types::U256,
        pub y: ::ethers::core::types::U256,
    }
    ///Custom Error type `PRBMath_MulDiv_Overflow` with signature `PRBMath_MulDiv_Overflow(uint256,uint256,uint256)` and selector `0x63a05778`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(
        name = "PRBMath_MulDiv_Overflow",
        abi = "PRBMath_MulDiv_Overflow(uint256,uint256,uint256)"
    )]
    pub struct PRBMath_MulDiv_Overflow {
        pub x: ::ethers::core::types::U256,
        pub y: ::ethers::core::types::U256,
        pub denominator: ::ethers::core::types::U256,
    }
    ///Custom Error type `PRBMath_SD59x18_Convert_Overflow` with signature `PRBMath_SD59x18_Convert_Overflow(int256)` and selector `0x9d581091`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(
        name = "PRBMath_SD59x18_Convert_Overflow",
        abi = "PRBMath_SD59x18_Convert_Overflow(int256)"
    )]
    pub struct PRBMath_SD59x18_Convert_Overflow {
        pub x: ::ethers::core::types::I256,
    }
    ///Custom Error type `PRBMath_SD59x18_Convert_Underflow` with signature `PRBMath_SD59x18_Convert_Underflow(int256)` and selector `0x99474eeb`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(
        name = "PRBMath_SD59x18_Convert_Underflow",
        abi = "PRBMath_SD59x18_Convert_Underflow(int256)"
    )]
    pub struct PRBMath_SD59x18_Convert_Underflow {
        pub x: ::ethers::core::types::I256,
    }
    ///Custom Error type `PRBMath_SD59x18_Div_InputTooSmall` with signature `PRBMath_SD59x18_Div_InputTooSmall()` and selector `0x9fe2b450`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(
        name = "PRBMath_SD59x18_Div_InputTooSmall",
        abi = "PRBMath_SD59x18_Div_InputTooSmall()"
    )]
    pub struct PRBMath_SD59x18_Div_InputTooSmall;
    ///Custom Error type `PRBMath_SD59x18_Div_Overflow` with signature `PRBMath_SD59x18_Div_Overflow(int256,int256)` and selector `0xd49c26b3`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(
        name = "PRBMath_SD59x18_Div_Overflow",
        abi = "PRBMath_SD59x18_Div_Overflow(int256,int256)"
    )]
    pub struct PRBMath_SD59x18_Div_Overflow {
        pub x: ::ethers::core::types::I256,
        pub y: ::ethers::core::types::I256,
    }
    ///Custom Error type `PRBMath_SD59x18_IntoUint256_Underflow` with signature `PRBMath_SD59x18_IntoUint256_Underflow(int256)` and selector `0x2463f3d5`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(
        name = "PRBMath_SD59x18_IntoUint256_Underflow",
        abi = "PRBMath_SD59x18_IntoUint256_Underflow(int256)"
    )]
    pub struct PRBMath_SD59x18_IntoUint256_Underflow {
        pub x: ::ethers::core::types::I256,
    }
    ///Custom Error type `PRBMath_SD59x18_Mul_InputTooSmall` with signature `PRBMath_SD59x18_Mul_InputTooSmall()` and selector `0xa6070c25`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(
        name = "PRBMath_SD59x18_Mul_InputTooSmall",
        abi = "PRBMath_SD59x18_Mul_InputTooSmall()"
    )]
    pub struct PRBMath_SD59x18_Mul_InputTooSmall;
    ///Custom Error type `PRBMath_SD59x18_Mul_Overflow` with signature `PRBMath_SD59x18_Mul_Overflow(int256,int256)` and selector `0x120b5b43`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(
        name = "PRBMath_SD59x18_Mul_Overflow",
        abi = "PRBMath_SD59x18_Mul_Overflow(int256,int256)"
    )]
    pub struct PRBMath_SD59x18_Mul_Overflow {
        pub x: ::ethers::core::types::I256,
        pub y: ::ethers::core::types::I256,
    }
    ///Container type for all of the contract's custom errors
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum FleekRewardErrors {
        PRBMath_MulDiv18_Overflow(PRBMath_MulDiv18_Overflow),
        PRBMath_MulDiv_Overflow(PRBMath_MulDiv_Overflow),
        PRBMath_SD59x18_Convert_Overflow(PRBMath_SD59x18_Convert_Overflow),
        PRBMath_SD59x18_Convert_Underflow(PRBMath_SD59x18_Convert_Underflow),
        PRBMath_SD59x18_Div_InputTooSmall(PRBMath_SD59x18_Div_InputTooSmall),
        PRBMath_SD59x18_Div_Overflow(PRBMath_SD59x18_Div_Overflow),
        PRBMath_SD59x18_IntoUint256_Underflow(PRBMath_SD59x18_IntoUint256_Underflow),
        PRBMath_SD59x18_Mul_InputTooSmall(PRBMath_SD59x18_Mul_InputTooSmall),
        PRBMath_SD59x18_Mul_Overflow(PRBMath_SD59x18_Mul_Overflow),
        /// The standard solidity revert string, with selector
        /// Error(string) -- 0x08c379a0
        RevertString(::std::string::String),
    }
    impl ::ethers::core::abi::AbiDecode for FleekRewardErrors {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded)
                = <::std::string::String as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::RevertString(decoded));
            }
            if let Ok(decoded)
                = <PRBMath_MulDiv18_Overflow as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::PRBMath_MulDiv18_Overflow(decoded));
            }
            if let Ok(decoded)
                = <PRBMath_MulDiv_Overflow as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::PRBMath_MulDiv_Overflow(decoded));
            }
            if let Ok(decoded)
                = <PRBMath_SD59x18_Convert_Overflow as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::PRBMath_SD59x18_Convert_Overflow(decoded));
            }
            if let Ok(decoded)
                = <PRBMath_SD59x18_Convert_Underflow as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::PRBMath_SD59x18_Convert_Underflow(decoded));
            }
            if let Ok(decoded)
                = <PRBMath_SD59x18_Div_InputTooSmall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::PRBMath_SD59x18_Div_InputTooSmall(decoded));
            }
            if let Ok(decoded)
                = <PRBMath_SD59x18_Div_Overflow as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::PRBMath_SD59x18_Div_Overflow(decoded));
            }
            if let Ok(decoded)
                = <PRBMath_SD59x18_IntoUint256_Underflow as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::PRBMath_SD59x18_IntoUint256_Underflow(decoded));
            }
            if let Ok(decoded)
                = <PRBMath_SD59x18_Mul_InputTooSmall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::PRBMath_SD59x18_Mul_InputTooSmall(decoded));
            }
            if let Ok(decoded)
                = <PRBMath_SD59x18_Mul_Overflow as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::PRBMath_SD59x18_Mul_Overflow(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for FleekRewardErrors {
        fn encode(self) -> ::std::vec::Vec<u8> {
            match self {
                Self::PRBMath_MulDiv18_Overflow(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::PRBMath_MulDiv_Overflow(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::PRBMath_SD59x18_Convert_Overflow(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::PRBMath_SD59x18_Convert_Underflow(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::PRBMath_SD59x18_Div_InputTooSmall(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::PRBMath_SD59x18_Div_Overflow(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::PRBMath_SD59x18_IntoUint256_Underflow(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::PRBMath_SD59x18_Mul_InputTooSmall(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::PRBMath_SD59x18_Mul_Overflow(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::RevertString(s) => ::ethers::core::abi::AbiEncode::encode(s),
            }
        }
    }
    impl ::ethers::contract::ContractRevert for FleekRewardErrors {
        fn valid_selector(selector: [u8; 4]) -> bool {
            match selector {
                [0x08, 0xc3, 0x79, 0xa0] => true,
                _ if selector
                    == <PRBMath_MulDiv18_Overflow as ::ethers::contract::EthError>::selector() => {
                    true
                }
                _ if selector
                    == <PRBMath_MulDiv_Overflow as ::ethers::contract::EthError>::selector() => {
                    true
                }
                _ if selector
                    == <PRBMath_SD59x18_Convert_Overflow as ::ethers::contract::EthError>::selector() => {
                    true
                }
                _ if selector
                    == <PRBMath_SD59x18_Convert_Underflow as ::ethers::contract::EthError>::selector() => {
                    true
                }
                _ if selector
                    == <PRBMath_SD59x18_Div_InputTooSmall as ::ethers::contract::EthError>::selector() => {
                    true
                }
                _ if selector
                    == <PRBMath_SD59x18_Div_Overflow as ::ethers::contract::EthError>::selector() => {
                    true
                }
                _ if selector
                    == <PRBMath_SD59x18_IntoUint256_Underflow as ::ethers::contract::EthError>::selector() => {
                    true
                }
                _ if selector
                    == <PRBMath_SD59x18_Mul_InputTooSmall as ::ethers::contract::EthError>::selector() => {
                    true
                }
                _ if selector
                    == <PRBMath_SD59x18_Mul_Overflow as ::ethers::contract::EthError>::selector() => {
                    true
                }
                _ => false,
            }
        }
    }
    impl ::core::fmt::Display for FleekRewardErrors {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::PRBMath_MulDiv18_Overflow(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::PRBMath_MulDiv_Overflow(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::PRBMath_SD59x18_Convert_Overflow(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::PRBMath_SD59x18_Convert_Underflow(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::PRBMath_SD59x18_Div_InputTooSmall(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::PRBMath_SD59x18_Div_Overflow(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::PRBMath_SD59x18_IntoUint256_Underflow(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::PRBMath_SD59x18_Mul_InputTooSmall(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::PRBMath_SD59x18_Mul_Overflow(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::RevertString(s) => ::core::fmt::Display::fmt(s, f),
            }
        }
    }
    impl ::core::convert::From<::std::string::String> for FleekRewardErrors {
        fn from(value: String) -> Self {
            Self::RevertString(value)
        }
    }
    impl ::core::convert::From<PRBMath_MulDiv18_Overflow> for FleekRewardErrors {
        fn from(value: PRBMath_MulDiv18_Overflow) -> Self {
            Self::PRBMath_MulDiv18_Overflow(value)
        }
    }
    impl ::core::convert::From<PRBMath_MulDiv_Overflow> for FleekRewardErrors {
        fn from(value: PRBMath_MulDiv_Overflow) -> Self {
            Self::PRBMath_MulDiv_Overflow(value)
        }
    }
    impl ::core::convert::From<PRBMath_SD59x18_Convert_Overflow> for FleekRewardErrors {
        fn from(value: PRBMath_SD59x18_Convert_Overflow) -> Self {
            Self::PRBMath_SD59x18_Convert_Overflow(value)
        }
    }
    impl ::core::convert::From<PRBMath_SD59x18_Convert_Underflow> for FleekRewardErrors {
        fn from(value: PRBMath_SD59x18_Convert_Underflow) -> Self {
            Self::PRBMath_SD59x18_Convert_Underflow(value)
        }
    }
    impl ::core::convert::From<PRBMath_SD59x18_Div_InputTooSmall> for FleekRewardErrors {
        fn from(value: PRBMath_SD59x18_Div_InputTooSmall) -> Self {
            Self::PRBMath_SD59x18_Div_InputTooSmall(value)
        }
    }
    impl ::core::convert::From<PRBMath_SD59x18_Div_Overflow> for FleekRewardErrors {
        fn from(value: PRBMath_SD59x18_Div_Overflow) -> Self {
            Self::PRBMath_SD59x18_Div_Overflow(value)
        }
    }
    impl ::core::convert::From<PRBMath_SD59x18_IntoUint256_Underflow>
    for FleekRewardErrors {
        fn from(value: PRBMath_SD59x18_IntoUint256_Underflow) -> Self {
            Self::PRBMath_SD59x18_IntoUint256_Underflow(value)
        }
    }
    impl ::core::convert::From<PRBMath_SD59x18_Mul_InputTooSmall> for FleekRewardErrors {
        fn from(value: PRBMath_SD59x18_Mul_InputTooSmall) -> Self {
            Self::PRBMath_SD59x18_Mul_InputTooSmall(value)
        }
    }
    impl ::core::convert::From<PRBMath_SD59x18_Mul_Overflow> for FleekRewardErrors {
        fn from(value: PRBMath_SD59x18_Mul_Overflow) -> Self {
            Self::PRBMath_SD59x18_Mul_Overflow(value)
        }
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(name = "NewController", abi = "NewController(address,address)")]
    pub struct NewControllerFilter {
        #[ethevent(indexed)]
        pub old_controller: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub new_controller: ::ethers::core::types::Address,
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(
        name = "NewPendingController",
        abi = "NewPendingController(address,address)"
    )]
    pub struct NewPendingControllerFilter {
        #[ethevent(indexed)]
        pub controller: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub new_controller: ::ethers::core::types::Address,
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(name = "RewardMinted", abi = "RewardMinted(address,uint256)")]
    pub struct RewardMintedFilter {
        #[ethevent(indexed)]
        pub account: ::ethers::core::types::Address,
        pub amount: ::ethers::core::types::U256,
    }
    ///Container type for all of the contract's events
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum FleekRewardEvents {
        NewControllerFilter(NewControllerFilter),
        NewPendingControllerFilter(NewPendingControllerFilter),
        RewardMintedFilter(RewardMintedFilter),
    }
    impl ::ethers::contract::EthLogDecode for FleekRewardEvents {
        fn decode_log(
            log: &::ethers::core::abi::RawLog,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::Error> {
            if let Ok(decoded) = NewControllerFilter::decode_log(log) {
                return Ok(FleekRewardEvents::NewControllerFilter(decoded));
            }
            if let Ok(decoded) = NewPendingControllerFilter::decode_log(log) {
                return Ok(FleekRewardEvents::NewPendingControllerFilter(decoded));
            }
            if let Ok(decoded) = RewardMintedFilter::decode_log(log) {
                return Ok(FleekRewardEvents::RewardMintedFilter(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData)
        }
    }
    impl ::core::fmt::Display for FleekRewardEvents {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::NewControllerFilter(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::NewPendingControllerFilter(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::RewardMintedFilter(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
            }
        }
    }
    impl ::core::convert::From<NewControllerFilter> for FleekRewardEvents {
        fn from(value: NewControllerFilter) -> Self {
            Self::NewControllerFilter(value)
        }
    }
    impl ::core::convert::From<NewPendingControllerFilter> for FleekRewardEvents {
        fn from(value: NewPendingControllerFilter) -> Self {
            Self::NewPendingControllerFilter(value)
        }
    }
    impl ::core::convert::From<RewardMintedFilter> for FleekRewardEvents {
        fn from(value: RewardMintedFilter) -> Self {
            Self::RewardMintedFilter(value)
        }
    }
    ///Container type for all input parameters for the `acceptTransfer` function with signature `acceptTransfer()` and selector `0x547eeac1`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "acceptTransfer", abi = "acceptTransfer()")]
    pub struct AcceptTransferCall;
    ///Container type for all input parameters for the `controller` function with signature `controller()` and selector `0xf77c4791`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "controller", abi = "controller()")]
    pub struct ControllerCall;
    ///Container type for all input parameters for the `cost` function with signature `cost()` and selector `0x13faede6`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "cost", abi = "cost()")]
    pub struct CostCall;
    ///Container type for all input parameters for the `distributeRewards` function with signature `distributeRewards(uint256)` and selector `0x59974e38`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "distributeRewards", abi = "distributeRewards(uint256)")]
    pub struct DistributeRewardsCall {
        pub epoch: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `epochManager` function with signature `epochManager()` and selector `0xe2d2bfe3`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "epochManager", abi = "epochManager()")]
    pub struct EpochManagerCall;
    ///Container type for all input parameters for the `inflationInLastEpoch` function with signature `inflationInLastEpoch()` and selector `0xc723129d`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "inflationInLastEpoch", abi = "inflationInLastEpoch()")]
    pub struct InflationInLastEpochCall;
    ///Container type for all input parameters for the `initialize` function with signature `initialize(address,address,address,address,address)` and selector `0x1459457a`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(
        name = "initialize",
        abi = "initialize(address,address,address,address,address)"
    )]
    pub struct InitializeCall {
        pub controller: ::ethers::core::types::Address,
        pub token: ::ethers::core::types::Address,
        pub epoch: ::ethers::core::types::Address,
        pub aggregator: ::ethers::core::types::Address,
        pub registry: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `maxInflation` function with signature `maxInflation()` and selector `0x5dbd15f2`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "maxInflation", abi = "maxInflation()")]
    pub struct MaxInflationCall;
    ///Container type for all input parameters for the `minInflationFactor` function with signature `minInflationFactor()` and selector `0x5aba1f47`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "minInflationFactor", abi = "minInflationFactor()")]
    pub struct MinInflationFactorCall;
    ///Container type for all input parameters for the `nodeRegistry` function with signature `nodeRegistry()` and selector `0xd9b5c4a5`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "nodeRegistry", abi = "nodeRegistry()")]
    pub struct NodeRegistryCall;
    ///Container type for all input parameters for the `pendingController` function with signature `pendingController()` and selector `0xa2cab3a1`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "pendingController", abi = "pendingController()")]
    pub struct PendingControllerCall;
    ///Container type for all input parameters for the `price` function with signature `price()` and selector `0xa035b1fe`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "price", abi = "price()")]
    pub struct PriceCall;
    ///Container type for all input parameters for the `rewardsAggregator` function with signature `rewardsAggregator()` and selector `0x51571900`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "rewardsAggregator", abi = "rewardsAggregator()")]
    pub struct RewardsAggregatorCall;
    ///Container type for all input parameters for the `rewardsDistribution` function with signature `rewardsDistribution(uint256)` and selector `0x16f63368`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "rewardsDistribution", abi = "rewardsDistribution(uint256)")]
    pub struct RewardsDistributionCall(pub ::ethers::core::types::U256);
    ///Container type for all input parameters for the `setCost` function with signature `setCost(int256)` and selector `0x2799459d`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "setCost", abi = "setCost(int256)")]
    pub struct SetCostCall {
        pub cost: ::ethers::core::types::I256,
    }
    ///Container type for all input parameters for the `setInflationRate` function with signature `setInflationRate(int256)` and selector `0x56a572d5`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "setInflationRate", abi = "setInflationRate(int256)")]
    pub struct SetInflationRateCall {
        pub inflation_rate: ::ethers::core::types::I256,
    }
    ///Container type for all input parameters for the `setMinInflationFactor` function with signature `setMinInflationFactor(int256)` and selector `0x28cd4b6d`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "setMinInflationFactor", abi = "setMinInflationFactor(int256)")]
    pub struct SetMinInflationFactorCall {
        pub min_inflation_factor: ::ethers::core::types::I256,
    }
    ///Container type for all input parameters for the `setPrice` function with signature `setPrice(int256)` and selector `0xf7a30806`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "setPrice", abi = "setPrice(int256)")]
    pub struct SetPriceCall {
        pub price: ::ethers::core::types::I256,
    }
    ///Container type for all input parameters for the `transferController` function with signature `transferController(address)` and selector `0xe8ea054b`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "transferController", abi = "transferController(address)")]
    pub struct TransferControllerCall {
        pub new_controller: ::ethers::core::types::Address,
    }
    ///Container type for all of the contract's call
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum FleekRewardCalls {
        AcceptTransfer(AcceptTransferCall),
        Controller(ControllerCall),
        Cost(CostCall),
        DistributeRewards(DistributeRewardsCall),
        EpochManager(EpochManagerCall),
        InflationInLastEpoch(InflationInLastEpochCall),
        Initialize(InitializeCall),
        MaxInflation(MaxInflationCall),
        MinInflationFactor(MinInflationFactorCall),
        NodeRegistry(NodeRegistryCall),
        PendingController(PendingControllerCall),
        Price(PriceCall),
        RewardsAggregator(RewardsAggregatorCall),
        RewardsDistribution(RewardsDistributionCall),
        SetCost(SetCostCall),
        SetInflationRate(SetInflationRateCall),
        SetMinInflationFactor(SetMinInflationFactorCall),
        SetPrice(SetPriceCall),
        TransferController(TransferControllerCall),
    }
    impl ::ethers::core::abi::AbiDecode for FleekRewardCalls {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded)
                = <AcceptTransferCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::AcceptTransfer(decoded));
            }
            if let Ok(decoded)
                = <ControllerCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Controller(decoded));
            }
            if let Ok(decoded)
                = <CostCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Cost(decoded));
            }
            if let Ok(decoded)
                = <DistributeRewardsCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::DistributeRewards(decoded));
            }
            if let Ok(decoded)
                = <EpochManagerCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::EpochManager(decoded));
            }
            if let Ok(decoded)
                = <InflationInLastEpochCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::InflationInLastEpoch(decoded));
            }
            if let Ok(decoded)
                = <InitializeCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Initialize(decoded));
            }
            if let Ok(decoded)
                = <MaxInflationCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::MaxInflation(decoded));
            }
            if let Ok(decoded)
                = <MinInflationFactorCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::MinInflationFactor(decoded));
            }
            if let Ok(decoded)
                = <NodeRegistryCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::NodeRegistry(decoded));
            }
            if let Ok(decoded)
                = <PendingControllerCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::PendingController(decoded));
            }
            if let Ok(decoded)
                = <PriceCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Price(decoded));
            }
            if let Ok(decoded)
                = <RewardsAggregatorCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::RewardsAggregator(decoded));
            }
            if let Ok(decoded)
                = <RewardsDistributionCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::RewardsDistribution(decoded));
            }
            if let Ok(decoded)
                = <SetCostCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::SetCost(decoded));
            }
            if let Ok(decoded)
                = <SetInflationRateCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::SetInflationRate(decoded));
            }
            if let Ok(decoded)
                = <SetMinInflationFactorCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::SetMinInflationFactor(decoded));
            }
            if let Ok(decoded)
                = <SetPriceCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::SetPrice(decoded));
            }
            if let Ok(decoded)
                = <TransferControllerCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::TransferController(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for FleekRewardCalls {
        fn encode(self) -> Vec<u8> {
            match self {
                Self::AcceptTransfer(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Controller(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Cost(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::DistributeRewards(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::EpochManager(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::InflationInLastEpoch(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Initialize(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::MaxInflation(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::MinInflationFactor(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::NodeRegistry(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::PendingController(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Price(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::RewardsAggregator(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::RewardsDistribution(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::SetCost(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::SetInflationRate(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::SetMinInflationFactor(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::SetPrice(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::TransferController(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
            }
        }
    }
    impl ::core::fmt::Display for FleekRewardCalls {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::AcceptTransfer(element) => ::core::fmt::Display::fmt(element, f),
                Self::Controller(element) => ::core::fmt::Display::fmt(element, f),
                Self::Cost(element) => ::core::fmt::Display::fmt(element, f),
                Self::DistributeRewards(element) => ::core::fmt::Display::fmt(element, f),
                Self::EpochManager(element) => ::core::fmt::Display::fmt(element, f),
                Self::InflationInLastEpoch(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::Initialize(element) => ::core::fmt::Display::fmt(element, f),
                Self::MaxInflation(element) => ::core::fmt::Display::fmt(element, f),
                Self::MinInflationFactor(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::NodeRegistry(element) => ::core::fmt::Display::fmt(element, f),
                Self::PendingController(element) => ::core::fmt::Display::fmt(element, f),
                Self::Price(element) => ::core::fmt::Display::fmt(element, f),
                Self::RewardsAggregator(element) => ::core::fmt::Display::fmt(element, f),
                Self::RewardsDistribution(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::SetCost(element) => ::core::fmt::Display::fmt(element, f),
                Self::SetInflationRate(element) => ::core::fmt::Display::fmt(element, f),
                Self::SetMinInflationFactor(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::SetPrice(element) => ::core::fmt::Display::fmt(element, f),
                Self::TransferController(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
            }
        }
    }
    impl ::core::convert::From<AcceptTransferCall> for FleekRewardCalls {
        fn from(value: AcceptTransferCall) -> Self {
            Self::AcceptTransfer(value)
        }
    }
    impl ::core::convert::From<ControllerCall> for FleekRewardCalls {
        fn from(value: ControllerCall) -> Self {
            Self::Controller(value)
        }
    }
    impl ::core::convert::From<CostCall> for FleekRewardCalls {
        fn from(value: CostCall) -> Self {
            Self::Cost(value)
        }
    }
    impl ::core::convert::From<DistributeRewardsCall> for FleekRewardCalls {
        fn from(value: DistributeRewardsCall) -> Self {
            Self::DistributeRewards(value)
        }
    }
    impl ::core::convert::From<EpochManagerCall> for FleekRewardCalls {
        fn from(value: EpochManagerCall) -> Self {
            Self::EpochManager(value)
        }
    }
    impl ::core::convert::From<InflationInLastEpochCall> for FleekRewardCalls {
        fn from(value: InflationInLastEpochCall) -> Self {
            Self::InflationInLastEpoch(value)
        }
    }
    impl ::core::convert::From<InitializeCall> for FleekRewardCalls {
        fn from(value: InitializeCall) -> Self {
            Self::Initialize(value)
        }
    }
    impl ::core::convert::From<MaxInflationCall> for FleekRewardCalls {
        fn from(value: MaxInflationCall) -> Self {
            Self::MaxInflation(value)
        }
    }
    impl ::core::convert::From<MinInflationFactorCall> for FleekRewardCalls {
        fn from(value: MinInflationFactorCall) -> Self {
            Self::MinInflationFactor(value)
        }
    }
    impl ::core::convert::From<NodeRegistryCall> for FleekRewardCalls {
        fn from(value: NodeRegistryCall) -> Self {
            Self::NodeRegistry(value)
        }
    }
    impl ::core::convert::From<PendingControllerCall> for FleekRewardCalls {
        fn from(value: PendingControllerCall) -> Self {
            Self::PendingController(value)
        }
    }
    impl ::core::convert::From<PriceCall> for FleekRewardCalls {
        fn from(value: PriceCall) -> Self {
            Self::Price(value)
        }
    }
    impl ::core::convert::From<RewardsAggregatorCall> for FleekRewardCalls {
        fn from(value: RewardsAggregatorCall) -> Self {
            Self::RewardsAggregator(value)
        }
    }
    impl ::core::convert::From<RewardsDistributionCall> for FleekRewardCalls {
        fn from(value: RewardsDistributionCall) -> Self {
            Self::RewardsDistribution(value)
        }
    }
    impl ::core::convert::From<SetCostCall> for FleekRewardCalls {
        fn from(value: SetCostCall) -> Self {
            Self::SetCost(value)
        }
    }
    impl ::core::convert::From<SetInflationRateCall> for FleekRewardCalls {
        fn from(value: SetInflationRateCall) -> Self {
            Self::SetInflationRate(value)
        }
    }
    impl ::core::convert::From<SetMinInflationFactorCall> for FleekRewardCalls {
        fn from(value: SetMinInflationFactorCall) -> Self {
            Self::SetMinInflationFactor(value)
        }
    }
    impl ::core::convert::From<SetPriceCall> for FleekRewardCalls {
        fn from(value: SetPriceCall) -> Self {
            Self::SetPrice(value)
        }
    }
    impl ::core::convert::From<TransferControllerCall> for FleekRewardCalls {
        fn from(value: TransferControllerCall) -> Self {
            Self::TransferController(value)
        }
    }
    ///Container type for all return fields from the `controller` function with signature `controller()` and selector `0xf77c4791`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct ControllerReturn(pub ::ethers::core::types::Address);
    ///Container type for all return fields from the `cost` function with signature `cost()` and selector `0x13faede6`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct CostReturn(pub ::ethers::core::types::I256);
    ///Container type for all return fields from the `epochManager` function with signature `epochManager()` and selector `0xe2d2bfe3`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct EpochManagerReturn(pub ::ethers::core::types::Address);
    ///Container type for all return fields from the `inflationInLastEpoch` function with signature `inflationInLastEpoch()` and selector `0xc723129d`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct InflationInLastEpochReturn(pub ::ethers::core::types::I256);
    ///Container type for all return fields from the `maxInflation` function with signature `maxInflation()` and selector `0x5dbd15f2`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct MaxInflationReturn(pub ::ethers::core::types::I256);
    ///Container type for all return fields from the `minInflationFactor` function with signature `minInflationFactor()` and selector `0x5aba1f47`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct MinInflationFactorReturn(pub ::ethers::core::types::I256);
    ///Container type for all return fields from the `nodeRegistry` function with signature `nodeRegistry()` and selector `0xd9b5c4a5`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct NodeRegistryReturn(pub ::ethers::core::types::Address);
    ///Container type for all return fields from the `pendingController` function with signature `pendingController()` and selector `0xa2cab3a1`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct PendingControllerReturn(pub ::ethers::core::types::Address);
    ///Container type for all return fields from the `price` function with signature `price()` and selector `0xa035b1fe`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct PriceReturn(pub ::ethers::core::types::I256);
    ///Container type for all return fields from the `rewardsAggregator` function with signature `rewardsAggregator()` and selector `0x51571900`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct RewardsAggregatorReturn(pub ::ethers::core::types::Address);
    ///Container type for all return fields from the `rewardsDistribution` function with signature `rewardsDistribution(uint256)` and selector `0x16f63368`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct RewardsDistributionReturn(pub bool);
}
